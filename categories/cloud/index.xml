<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud on Hervé Kakiang&#39;s blog</title>
    <link>https://hrv2k.github.io/categories/cloud/</link>
    <description>Recent content in Cloud on Hervé Kakiang&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 20019–2021, Hervé Kakiang; all rights reserved.</copyright>
    <lastBuildDate>Fri, 01 Jan 2021 12:27:37 +0000</lastBuildDate><atom:link href="https://hrv2k.github.io/categories/cloud/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IBM Cloud Offerings with no expiration and no credit card required</title>
      <link>https://hrv2k.github.io/post/ibm-cloud-free-tier/</link>
      <pubDate>Fri, 01 Jan 2021 12:27:37 +0000</pubDate>
      
      <guid>https://hrv2k.github.io/post/ibm-cloud-free-tier/</guid>
      <description>
        
          &lt;h2 id=&#34;paas&#34;&gt;Paas&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;IBM Cloud Foundry&lt;/strong&gt; is a Platform-as-a-service (PaaS) that enables you to deploy and
scale apps without managing server.
&lt;em&gt;Quota: 256 MB of storage.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;storage&#34;&gt;Storage:&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;IBM Cloud Object Storage&lt;/strong&gt; provides flexible, cost-effective storage for unstructured data.
&lt;em&gt;Quota: up to 25 GB per month.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;database&#34;&gt;Database:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IBM Cloudant&lt;/strong&gt; is a scalable JSON document database for web, mobile, IoT and serverless
applications.
&lt;em&gt;Quota: 1 GB of data storage.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IBM Db2 on Cloud&lt;/strong&gt; is a fully managed cloud SQL database with a turbo-charged Db2 engine.
&lt;em&gt;Quota: 100 MB of data storage.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;devops&#34;&gt;DevOps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IBM Cloud Availability Monitoring&lt;/strong&gt; enables you to ensure applications are always
available and meeting user expectations for response time.
&lt;em&gt;Quota: 3 million data points per month.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IBM Cloud Continuous Delivery&lt;/strong&gt; provides the support for DevOps best practices by using
Git, issue tracking, CI/CD pipelines and the Eclipse Orion Web IDE in the cloud.
&lt;em&gt;Quota: 500 delivery pipeline jobs.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IBM Cloud Container Registry&lt;/strong&gt; manages Docker container images in a fully managed private
registry.
&lt;em&gt;Quota: 5 GB of pull data transfer per month.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;security&#34;&gt;Security&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IBM Cloud Activity Tracker&lt;/strong&gt; enables you to gain insights about your users and their
applications with IBM Cloud services.
&lt;em&gt;Quota: Query 100,000 most recent cloud activity events.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IBM Cloud App ID&lt;/strong&gt; adds authentication to your mobile and web apps, and protect your APIs
and back ends running on IBM Cloud.
&lt;em&gt;Quota: 1,000 monthly events.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;analytics&#34;&gt;Analytics&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IBM Cloud Analytics Engine&lt;/strong&gt; helps you develop and deploy analytics applications using
open source Apache Spark and Apache Hadoop.
&lt;em&gt;Quota: 50 node hours.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IBM Streams&lt;/strong&gt; ingest, analyze, monitor and correlate data as it arrives from real-time
data sources.
&lt;em&gt;Quota: 1 dedicated application resource.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

        
      </description>
    </item>
    
    <item>
      <title>Deploy a Flask &#43; MySQL App to GCE Using Deployment Manager</title>
      <link>https://hrv2k.github.io/post/deploy-a-flask-mysql-app-to-gce-using-deployment-manager/</link>
      <pubDate>Sat, 29 Feb 2020 21:25:21 +0000</pubDate>
      
      <guid>https://hrv2k.github.io/post/deploy-a-flask-mysql-app-to-gce-using-deployment-manager/</guid>
      <description>
        
          &lt;p&gt;&lt;strong&gt;Using an infrastructure provisioning platform, you can bring an
entire infrastructure to life using a couple lines of declarative code.
This is infrastructure as Code, a way to define in code the resources you
need for your infrastructure and to use an infrastructure provisioning engine
to create and configure those resources. In this tutorial you&#39;ll create
a Google Compute Engine (GCE) instance, then deploy a Flask + MySQL App
on it using Google Cloud Deployment Manager.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/deployment-manager/&#34;&gt;Google Cloud Deployment Manager&lt;/a&gt;
is Google&#39;s Infrastracture as Code service. It allows you to deploy and
manage cloud resources (compute, storage, and network resources, and
GCP-specific services) without having to configure those resources
every time you deploy them. Creating an infrastructure and deploying
apps become a matter of executing a couple lines of config code. You
specify the desired state of your infrastructure and the deployment
manager figures out how to make the actual state match the desired state.&lt;/p&gt;
&lt;p&gt;To use deployment manager, you create templates. You define the resources
you want to provision in those templates. Templates allow for resource
definitions reusability, since you can factor out properties such as
machine type, disk image, storage class, some metadata etc. Then you can
reuse the same template to create a different infrastructure with
different characteristics.&lt;/p&gt;
&lt;p&gt;Template can be written in Python or Jinja2. Let&#39;s go with Python here.&lt;/p&gt;
&lt;h2 id=&#34;assumptions-about-the-reader&#34;&gt;Assumptions about the reader&lt;/h2&gt;
&lt;p&gt;I assume that you have an account on the &lt;a href=&#34;https://cloud.google.com/&#34;&gt;GCP&lt;/a&gt;
and have a &lt;a href=&#34;https://console.cloud.google.com/projectselector2/home/dashboard&#34;&gt;GCP project&lt;/a&gt;.
Install and authenticate the &lt;a href=&#34;https://cloud.google.com/sdk/downloads&#34;&gt;gcloud command-line tool&lt;/a&gt; on a local host,
or use &lt;a href=&#34;https://console.cloud.google.com/?cloudshell=true&#34;&gt;Cloud Shell&lt;/a&gt;
to create and control GCP resources.&lt;/p&gt;
&lt;h2 id=&#34;python-instance-template&#34;&gt;Python instance template&lt;/h2&gt;
&lt;p&gt;This template defines 2 resources: a compute instance, and a firewall rule
that allows external traffic into the compute instance&#39;s port 80.
The compute instance is provisioned in the default network.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;Deployment Manager Template for creating a GCE instance
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;vm-template.py
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;COMPUTE_URL_BASE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;https://www.googleapis.com/compute/v1/&amp;#39;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;global_compute_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;project&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;collection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;COMPUTE_URL_BASE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;projects/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;project&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;                    &lt;span class=&#34;s1&#34;&gt;&amp;#39;/global/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;collection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;zonal_compute_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;project&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;collection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;COMPUTE_URL_BASE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;projects/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;project&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;                    &lt;span class=&#34;s1&#34;&gt;&amp;#39;/zones/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;collection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;generate_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;base_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;deployment&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;items&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;properties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;metadata-from-file&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;imports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;metadata&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;items&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;31&lt;/span&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;compute.v1.instance&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;32&lt;/span&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;app-vm&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;33&lt;/span&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;properties&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;34&lt;/span&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;zone&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;properties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;zone&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;35&lt;/span&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;machineType&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zonal_compute_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;project&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;36&lt;/span&gt;                                             &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;properties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;zone&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;37&lt;/span&gt;                                             &lt;span class=&#34;s1&#34;&gt;&amp;#39;machineTypes&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;38&lt;/span&gt;                                             &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;properties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;machine-type&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;39&lt;/span&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;tags&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;40&lt;/span&gt;                &lt;span class=&#34;s1&#34;&gt;&amp;#39;items&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;flask-mysql-server&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;41&lt;/span&gt;            &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;42&lt;/span&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;metadata&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;43&lt;/span&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;disks&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;44&lt;/span&gt;                &lt;span class=&#34;s1&#34;&gt;&amp;#39;deviceName&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;boot&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;45&lt;/span&gt;                &lt;span class=&#34;s1&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;PERSISTENT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;46&lt;/span&gt;                &lt;span class=&#34;s1&#34;&gt;&amp;#39;autoDelete&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;47&lt;/span&gt;                &lt;span class=&#34;s1&#34;&gt;&amp;#39;boot&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;48&lt;/span&gt;                &lt;span class=&#34;s1&#34;&gt;&amp;#39;initializeParams&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;49&lt;/span&gt;                    &lt;span class=&#34;s1&#34;&gt;&amp;#39;diskName&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;base_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;-disk&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;50&lt;/span&gt;                    &lt;span class=&#34;s1&#34;&gt;&amp;#39;sourceImage&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;global_compute_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;debian-cloud&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;51&lt;/span&gt;                                                      &lt;span class=&#34;s1&#34;&gt;&amp;#39;images&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;family/debian-9&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;52&lt;/span&gt;                &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;53&lt;/span&gt;            &lt;span class=&#34;p&#34;&gt;}],&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;54&lt;/span&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;networkInterfaces&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;55&lt;/span&gt;                &lt;span class=&#34;s1&#34;&gt;&amp;#39;network&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;global_compute_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;project&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;56&lt;/span&gt;                                              &lt;span class=&#34;s1&#34;&gt;&amp;#39;networks&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;57&lt;/span&gt;                &lt;span class=&#34;s1&#34;&gt;&amp;#39;accessConfigs&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;58&lt;/span&gt;                    &lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;External NAT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;59&lt;/span&gt;                    &lt;span class=&#34;s1&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;ONE_TO_ONE_NAT&amp;#39;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;60&lt;/span&gt;                &lt;span class=&#34;p&#34;&gt;}]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;61&lt;/span&gt;            &lt;span class=&#34;p&#34;&gt;}]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;62&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;63&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;64&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;65&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;66&lt;/span&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;compute.v1.firewall&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;67&lt;/span&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;app-firewall&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;68&lt;/span&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;properties&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;69&lt;/span&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;allowed&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;70&lt;/span&gt;                &lt;span class=&#34;s1&#34;&gt;&amp;#39;IPProtocol&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;TCP&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;71&lt;/span&gt;                &lt;span class=&#34;s1&#34;&gt;&amp;#39;ports&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;80&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;72&lt;/span&gt;            &lt;span class=&#34;p&#34;&gt;}],&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;73&lt;/span&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;sourceRanges&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;0.0.0.0/0&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;74&lt;/span&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;targetTags&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;flask-mysql-server&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;75&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;76&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;77&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;78&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;resources&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;startup-script&#34;&gt;Startup script&lt;/h2&gt;
&lt;p&gt;You need to create a startup script to be executed when the compute instance
is installed. the script will clone the Flask + MySQL app from GitHub and
install and run on the compute instance. It will also install MySQL server
version 5.7, set it up with a default password, download the
&lt;a href=&#34;https://dev.mysql.com/doc/sakila/en/&#34;&gt;Sakila sample database&lt;/a&gt; schema
and data and load it to the newly installed MySQL server.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Install Stackdriver logging agent&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;curl -sSO https://dl.google.com/cloudagents/install-logging-agent.sh
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;sudo bash install-logging-agent.sh
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Install or update needed software&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;sudo apt-get update
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;sudo apt-get install -yq git python python-pip
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;pip install --upgrade pip virtualenv
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Download the MySQL GPG Public key&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;sudo apt install dirmngr
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;sudo apt-key adv --keyserver pgp.mit.edu --recv-keys 5072E1F5
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# write into mysql.list repository entries for mysql&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;sudo cat &amp;gt; /etc/apt/sources.list.d/mysql.list &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;deb http://repo.mysql.com/apt/debian/ stretch mysql-5.7
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;deb http://repo.mysql.com/apt/debian/ stretch mysql-tools
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;#deb http://repo.mysql.com/apt/debian/ stretch mysql-tools-preview
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;deb-src http://repo.mysql.com/apt/debian/ stretch mysql-5.7
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# update packages&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;sudo apt-get update
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Install debconf-utils to set debconf variable&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;sudo apt-get install debconf-utils
&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# set the root password for the server installation&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;mysql-community-server mysql-community-server/root-pass password rootpassword&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sudo debconf-set-selections
&lt;span class=&#34;ln&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;mysql-community-server mysql-community-server/re-root-pass password rootpassword&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sudo debconf-set-selections
&lt;span class=&#34;ln&#34;&gt;33&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;34&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# set the env var DEBIAN_FRONTEND to noninteractive then install MySQL noninteractively (no prompt)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;35&lt;/span&gt;sudo &lt;span class=&#34;nv&#34;&gt;DEBIAN_FRONTEND&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;noninteractive apt-get -y install mysql-server
&lt;span class=&#34;ln&#34;&gt;36&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;37&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# download sakila schema and data&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;38&lt;/span&gt;wget https://downloads.mysql.com/docs/sakila-db.tar.gz -O /tmp/sakila-db.tar.gz
&lt;span class=&#34;ln&#34;&gt;39&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# unzip&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;40&lt;/span&gt;tar -zxvf /tmp/sakila-db.tar.gz
&lt;span class=&#34;ln&#34;&gt;41&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# create database schema&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;42&lt;/span&gt;mysql -uroot -prootpassword -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;SOURCE sakila-db/sakila-schema.sql;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;43&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# populate the database with data&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;44&lt;/span&gt;mysql -uroot -prootpassword -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;SOURCE sakila-db/sakila-data.sql;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;45&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;46&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;APP_DIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/usr/src/sakila-flask-app
&lt;span class=&#34;ln&#34;&gt;47&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Fetch sakila-flask-app source code&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;48&lt;/span&gt;git clone https://github.com/kakiang/sakila-flask-app.git &lt;span class=&#34;nv&#34;&gt;$APP_DIR&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;49&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Python environment setup&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;51&lt;/span&gt;virtualenv -p python3 &lt;span class=&#34;nv&#34;&gt;$APP_DIR&lt;/span&gt;/env
&lt;span class=&#34;ln&#34;&gt;52&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$APP_DIR&lt;/span&gt;/env/bin/activate
&lt;span class=&#34;ln&#34;&gt;53&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$APP_DIR&lt;/span&gt;/env/bin/pip install -r &lt;span class=&#34;nv&#34;&gt;$APP_DIR&lt;/span&gt;/requirements.txt
&lt;span class=&#34;ln&#34;&gt;54&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;55&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# set env vars to run flask&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;56&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;FLASK_APP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$APP_DIR&lt;/span&gt;/run.py
&lt;span class=&#34;ln&#34;&gt;57&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;FLASK_DEBUG&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;58&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# run flask&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;59&lt;/span&gt;flask run --host&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0.0.0.0 --port&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;deployment-manager-config-file&#34;&gt;Deployment Manager config file&lt;/h2&gt;
&lt;p&gt;This is the Deployment Manager config file. It&#39;s written in YAML syntax.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# config.yaml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;imports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;vm-template.py&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;startup-script.sh&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;app-vm&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;vm-template.py&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;properties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;zone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;us-central1-f&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;machine-type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;g1-small&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata-from-file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;startup-script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;startup-script.sh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It&#39;s now time to create the infrastructure and deploy the app. Run the
following command to bring your infra to live:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud deployment-manager deployments create app-deployment --config config.yaml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output looks something like this:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;The fingerprint of the deployment is &lt;span class=&#34;nv&#34;&gt;eg6AtNRQR67c8jixp43vUQ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;....
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;Create operation operation-ae2bc00b completed successfully.
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;NAME             TYPE                 STATE      ERRORS  INTENT
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;app-firewall     compute.v1.firewall  COMPLETED  &lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;app-vm           compute.v1.instance  COMPLETED  &lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;A compute instance virtual machine and a firewall have been created.
Wait 1 to 2 minutes for the startup script to complete execution and use
the external IP of the &lt;code&gt;app-vm&lt;/code&gt; instance to access the deployed app in
a browser.&lt;/p&gt;
&lt;p&gt;The template, the startup script and the config file can be found on
&lt;a href=&#34;https://github.com/kakiang/sakila-flask-app-deployment-manager&#34;&gt;GitHub&lt;/a&gt;.
You can clone it and use it to create the same infrastructure as described
above.&lt;/p&gt;
&lt;p&gt;You can clone it:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git clone https://github.com/kakiang/sakila-flask-app-deployment-manager.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Change directory into it and review it:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; sakila-flask-app-deployment-manager/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Then deploy it:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud deployment-manager deployments create app-deployment --config config.yaml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;h2 id=&#34;clean-up&#34;&gt;Clean up&lt;/h2&gt;
&lt;p&gt;Run the following command to delete the environment you just deployed:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud deployment-manager deployments delete app-deployment&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Deploy to Firebase Hosting Using Cloud Build and Using Cloud KMS to Encrypt tokens</title>
      <link>https://hrv2k.github.io/post/deploy-to-firebase-hosting-using-cloud-build/</link>
      <pubDate>Fri, 31 Jan 2020 14:28:34 +0000</pubDate>
      
      <guid>https://hrv2k.github.io/post/deploy-to-firebase-hosting-using-cloud-build/</guid>
      <description>
        
          &lt;p&gt;&lt;a href=&#34;https://firebase.google.com/docs/hosting&#34;&gt;Firebase Hosting&lt;/a&gt; is Google
hosting service for Web and mobile Web apps. Using the
&lt;a href=&#34;https://firebase.google.com/docs/cli&#34;&gt;Firebase CLI&lt;/a&gt;, you can deploy files
from local directories on your computer to your Hosting server.
Deploying to Firebase Hosting using Google Cloud Build will allow you to
automate all the build, test and deployment phases.
And when it comes to continuous integration/deployment systems, it is
often the case that you have to provide sensitive information such as
authorization tokens, deploy api keys or other resources to the CI/CD
tool or service. However it&#39;s never a good practice to store them in
plaintext in config or source code files. They should be encrypted and
stored where they will not be compromised. That&#39;s when
&lt;a href=&#34;https://cloud.google.com/kms&#34;&gt;Cloud Key Management Service (KMS)&lt;/a&gt; comes in.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/kms&#34;&gt;Cloud KMS&lt;/a&gt; is a cloud-hosted key management
service that lets you manage cryptographic keys for your cloud services.
You can generate, use, rotate, and destroy cryptographic keys.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Essentially, Cloud KMS is a cloud service that provides cryptographic
functions that encrypt and decrypt sensitive information.
Cloud KMS allows you to protect secrets and other sensitive data that
you store on the GCP. Because Cloud KMS is integrated with
&lt;a href=&#34;https://cloud.google.com/kms/docs/iam&#34;&gt;Cloud Identity and Access Management (IAM)&lt;/a&gt;
and &lt;a href=&#34;https://cloud.google.com/logging/docs/audit/&#34;&gt;Cloud Audit Logging&lt;/a&gt;,
you can manage permissions on individual cryptographic keys and monitor
activities involving your keys. Only users who have the necessary IAM
permissions to use the CryptoKey can encrypt or decrypt resources with
that key. Cloud IAM gives you the ability to assigned fined-grained
permissions to specific users or service accounts to perform specific
tasks on specific resources.
Cloud Audit Logging tells you who did what, where, and when within your
GCP project.&lt;/p&gt;
&lt;p&gt;Cryptographic keys managed by Cloud KMS can be directly used by other GCP
services and by the applications you deploy on the GCP.&lt;/p&gt;
&lt;p&gt;In this post we shall take a look at using Cloud KMS to encrypt Firebase
deployment token, passing the encrypted token and the CryptoKey to a build
request to allow Cloud build to deploy an app to Firebase Hosting.&lt;/p&gt;
&lt;h2 id=&#34;what-you-should-know-before-getting-hands-on&#34;&gt;What you should know before getting hands-on&lt;/h2&gt;
&lt;h3 id=&#34;1-cloud-kms&#34;&gt;1. Cloud KMS&lt;/h3&gt;
&lt;p&gt;Cloud KMS organizes cryptographic keys in a hierarchical structure, and uses
Cloud IAM to manage access to resources at each level of the hierarchy.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://cloud.google.com/kms/docs/object-hierarchy#project&#34;&gt;Project&lt;/a&gt; &amp;gt;
&lt;a href=&#34;https://cloud.google.com/kms/docs/object-hierarchy#location&#34;&gt;Location&lt;/a&gt; &amp;gt;
&lt;a href=&#34;https://cloud.google.com/kms/docs/object-hierarchy#key_ring&#34;&gt;Key ring&lt;/a&gt; &amp;gt;
&lt;a href=&#34;https://cloud.google.com/kms/docs/object-hierarchy#key&#34;&gt;Key&lt;/a&gt; &amp;gt;
&lt;a href=&#34;https://cloud.google.com/kms/docs/object-hierarchy#key_version&#34;&gt;Key version&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Like any other GCP resource, Cloud KMS resources belong to a GCP project.&lt;/p&gt;
&lt;p&gt;In a project, Cloud KMS resources are created in a regional,
or multi-regional location. The location determines where the resources
are stored and where requests regarding those resources are processed.
Specifically, there are four types of
&lt;a href=&#34;https://cloud.google.com/kms/docs/locations&#34;&gt;locations&lt;/a&gt; where you can
create Cloud KMS resources: regional, dual-regional, multi-regional and global.
Resources created in the &lt;code&gt;global&lt;/code&gt; location are available from zones spread
around the globe.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key ring&lt;/strong&gt; is a logical grouping of cryptographic keys, It&#39;s a group of
keys created for a particular purpose. How you group your keys is
completely up to you. Keys inherit permissions from the key ring that
contains them. This allows you to manage permissions on keys at the key
ring level. For instance you can have one key ring for each one of your
environments, production key ring and development key ring.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/cloud-hosting-cbuild/keyring.png&#34; alt=&#34;Key ring (https://cloud.google.com/kms/docs/object-hierarchy#key)&#34;&gt;&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;key&lt;/strong&gt; in the GCP, is a named object that represents a cryptographic
key used for a specific purpose.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;key version&lt;/strong&gt; represents the key material, the actual bits used for
encryption. A key must have at least one key version. It can have many
key versions at the same time.&lt;/p&gt;
&lt;p&gt;Key rings and keys, once created in a project cannot be deleted. Key
versions, however, can be destroyed.&lt;/p&gt;
&lt;h3 id=&#34;2-cloud-build&#34;&gt;2. Cloud Build&lt;/h3&gt;
&lt;p&gt;Cloud Build is a CI/CD service on the GCP. It&#39;s used to build, test and
deploy artifacts to various environments. It does so by using docker
containers to execute different sort of tasks specified in the build
configuration file. Check out
&lt;a href=&#34;https://cloud.google.com/cloud-build/docs&#34;&gt;this page&lt;/a&gt; and
&lt;a href=&#34;https://cloud.google.com/cloud-build/docs/configuring-builds/build-test-deploy-artifacts&#34;&gt;this one&lt;/a&gt;
if you are not familiar with Cloud Build and want to learn more about it.
My &lt;a href=&#34;https://hrv2k.github.io/posts/getting-started-with-cloud-build/&#34;&gt;Getting Started with Cloud Build post&lt;/a&gt;
can also get you up to speed.&lt;/p&gt;
&lt;p&gt;Going forward, I&#39;ll assume that you know how Cloud Build works.&lt;/p&gt;
&lt;h2 id=&#34;gcp-setup&#34;&gt;GCP Setup&lt;/h2&gt;
&lt;p&gt;Before you begin, complete the following steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://accounts.google.com/Login&#34;&gt;Sign in&lt;/a&gt; to your Google Account.
If you don&#39;t already have one,
&lt;a href=&#34;https://accounts.google.com/SignUp&#34;&gt;sign up for a new account&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the Cloud Console, on the
&lt;a href=&#34;https://console.cloud.google.com/projectselector2/home/dashboard&#34;&gt;project selector page&lt;/a&gt;,
select or create a Google Cloud project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure that billing is enabled for your Google Cloud project.
&lt;a href=&#34;https://cloud.google.com/billing/docs/how-to/modify-project&#34;&gt;Learn how to confirm billing is enabled for your project&lt;/a&gt;
You are required to enable billing to use the GCP services that are used
here, however none of them will cost you money if you haven&#39;t used up the
&lt;a href=&#34;https://cloud.google.com/free&#34;&gt;free tier&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The gcloud SDK&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You can use Google Cloud Shell to follow along. Cloud Shell is
loaded with development tools, including the gcloud SDK which provides
command-line access to GCP resources. Navigate to
&lt;a href=&#34;https://console.cloud.google.com/&#34;&gt;GCP Console&lt;/a&gt;, on the top right
toolbar, click the Cloud Shell button to activate it.
You don&#39;t need to install anything if you are using Google Cloud Shell,
the next step from here is to
&lt;a href=&#34;#initialize-your-firebase-project&#34;&gt;initialize your Firebase project&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Or you can use the &lt;a href=&#34;https://cloud.google.com/sdk/docs/&#34;&gt;gcloud SDK&lt;/a&gt;
on your personal computer. Follow
&lt;a href=&#34;https://cloud.google.com/sdk/docs/downloads-interactive&#34;&gt;this  link&lt;/a&gt;,
select the correct SDK for your OS and install it. Once it is installed,
open the command line to initialize your cloud environment by typing the
command below, and follow the instructions to log in to GCP.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud init&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Test that gcloud CLI tool is properly logged in to GCP by checking the
active account. Run the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud auth list&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;install-firebase-cli&#34;&gt;Install Firebase CLI&lt;/h2&gt;
&lt;p&gt;Follow the instructions set
&lt;a href=&#34;https://firebase.google.com/docs/cli#install_the_firebase_cli&#34;&gt;here&lt;/a&gt;
to install Firebase CLI.
After installing the CLI, you must authenticate by signing into Firebase
using your Google account. Run the following command to sign in:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;firebase login&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you are properly signed into Firebase, your local machine is
connected to Firebase and you can access your Firebase projects by running
the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;firebase projects:list&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;initialize-your-firebase-project&#34;&gt;Initialize your Firebase project&lt;/h2&gt;
&lt;p&gt;Create a directory named &lt;code&gt;firebase-hosting-cb&lt;/code&gt; for your Firebase project,
then change directory into it:&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;mkdir firebase-hosting-cb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; firebase-hosting-cb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Follow the instructions set
&lt;a href=&#34;https://firebase.google.com/docs/cli#initialize_a_firebase_project&#34;&gt;here&lt;/a&gt;
to initialize a Firebase project. Select &lt;code&gt;Hosting&lt;/code&gt; as the Firebase feature
you want to set up for your Firebase project. Choose to use an existing
project, then select the project you want to associate with your project.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/cloud-hosting-cbuild/out.gif&#34; alt=&#34;firebase init&#34;&gt;&lt;/p&gt;
&lt;p&gt;Once the Firebase initialization completes, an &lt;code&gt;index.html&lt;/code&gt; file is
created inside of a directory named &lt;code&gt;public&lt;/code&gt; if you didn&#39;t change the
default settings during the initialization. Update the &lt;code&gt;index.html&lt;/code&gt; file
to your satisfaction.&lt;/p&gt;
&lt;p&gt;Let&#39;s initialize git as well:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git init&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run the command below to test your project locally&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;firebase serve&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;deploy-to-firebase-hosting-manually&#34;&gt;Deploy to Firebase Hosting (manually)&lt;/h2&gt;
&lt;p&gt;To deploy a release of your project to Firebase Hosting, run the
following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;firebase deploy -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;First deployment&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You&#39;ll see an output similar to this.  Notice that &lt;code&gt;your-project-id&lt;/code&gt; will
be replaced by your actual project ID.&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; Deploying to &lt;span class=&#34;s1&#34;&gt;&amp;#39;your-project-id&amp;#39;&lt;/span&gt;...
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;i  deploying hosting
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;i  hosting&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;your-project-id&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: beginning deploy...
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;i  hosting&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;your-project-id&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: found &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; files in public
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;✔  hosting&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;your-project-id&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: file upload &lt;span class=&#34;nb&#34;&gt;complete&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;i  hosting&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;your-project-id&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: finalizing version...
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;✔  hosting&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;your-project-id&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: version finalized
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;i  hosting&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;your-project-id&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: releasing new version...
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;✔  hosting&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;your-project-id&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: release &lt;span class=&#34;nb&#34;&gt;complete&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;✔  Deploy complete!
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;Project Console: https://console.firebase.google.com/project/your-project-id/overview
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;Hosting URL: https://your-project-id.firebaseapp.com&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
At this point you can access your site at the Hosting URL.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NB&lt;/strong&gt;: If you already have one Firebase Hosting site in your Firebase
project, you have to specify your site in &lt;code&gt;firebase.json&lt;/code&gt;. Add your site
name to the &lt;code&gt;firebase.json&lt;/code&gt; configuration file.
Or else the new deployment will override the existing site.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;hosting&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;site&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;your-site-name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;public&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;public&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;    &lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, run this command from your app&#39;s root directory to deploy your site:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;firebase deploy --only hosting:your-site-name&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Going forward, I&#39;ll assume that you have one site in your
Firebase project.&lt;/p&gt;
&lt;p&gt;You just manually deployed your app to Firebase Hosting. You&#39;ll have to
check your code to a source repository also separately. Let&#39;s
automate the process with Cloud Build.&lt;/p&gt;
&lt;h2 id=&#34;deploy-to-firebase-hosting-cloud-build&#34;&gt;Deploy to Firebase Hosting (cloud build)&lt;/h2&gt;
&lt;h3 id=&#34;firebase-token&#34;&gt;Firebase token&lt;/h3&gt;
&lt;p&gt;When you deployed to Firebase Hosting with &lt;code&gt;firebase deploy&lt;/code&gt;, it worked
because your local machine is connected to Firebase. But if you want to
deploy using another platform other than your local machine where you are
signed into Firebase, such as Cloud Build, Travis CI or CircleCI, you
have provide that platform a token and use the &lt;code&gt;--token&lt;/code&gt; flag of the Firebase CLI.
To get the token, run the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;firebase login:ci&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You&#39;ll be instructed to log in using the browser. After a succesful login,
the token will be printed to the console.&lt;/p&gt;
&lt;h3 id=&#34;encrypt-firebase-token-using-cloud-kms&#34;&gt;Encrypt Firebase token using Cloud KMS&lt;/h3&gt;
&lt;p&gt;You have the token, it&#39;s sensitive information. Anyone who has access to
that token can delete your app and redeploy whatever they want. So you
have to keep it secret, and at the same time you need to pass it to Cloud
Build. That&#39;s where Cloud KMS comes into play.&lt;/p&gt;
&lt;p&gt;Before you can encrypt your token using Cloud KMS, you have to create a
Cloud KMS KeyRing and CryptoKey.&lt;/p&gt;
&lt;p&gt;Initialize some environment variables
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;KEYRING_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;cicd-keyring&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;KEY_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;firebase-token&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Initialize an environment variable &lt;code&gt;FIREBASE_TOKEN&lt;/code&gt; with your token value.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;FIREBASE_TOKEN&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;YOUR_GENERATED_TOKEN&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Run the following command to create a KeyRing:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud kms keyrings create &lt;span class=&#34;nv&#34;&gt;$KEYRING_NAME&lt;/span&gt; --location global&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run the following command to create a CryptoKey:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud kms keys create &lt;span class=&#34;nv&#34;&gt;$KEY_NAME&lt;/span&gt; --location&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;global &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --keyring&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$KEYRING_NAME&lt;/span&gt; --purpose&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;encryption&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The CryptoKey is created.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/cloud-hosting-cbuild/key-created.png&#34; alt=&#34;crypto-created&#34;&gt;&lt;/p&gt;
&lt;p&gt;You can now use the CryptoKey to encrypt your
Firebase token. Remember that your Firebase token is in &lt;code&gt;$FIREBASE_TOKEN&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud kms encrypt --plaintext-file&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$FIREBASE_TOKEN&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;   --ciphertext-file&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;- &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# - writes to stdout&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;   --location&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;global --keyring&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$KEYRING_NAME&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --key&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$KEY_NAME&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; base64&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With this command, you encrypt the value of the environment variable
&lt;code&gt;$FIREBASE_TOKEN&lt;/code&gt; using the CryptoKey, and base64-encoded the encrypted
value. The output is the base64-encoded string of the encrypted token.&lt;/p&gt;
&lt;h3 id=&#34;cloud-build-config&#34;&gt;Cloud Build config&lt;/h3&gt;
&lt;p&gt;Now, let&#39;s write the build steps for Cloud Build. Probably what makes
Cloud Build so cool is its flexibility. You can do anything with it as
long as you package what you want to do in a docker image. In our case,
we need to have a Firebase build step whereby we use the firebase-tools
to deploy our app. We could create the docker image to containerize
firebase-tools, push the containerized image to Container Registry and
use it to deploy our app. Details regarding that process can be found
&lt;a href=&#34;https://cloud.google.com/cloud-build/docs/configuring-builds/build-test-deploy-artifacts&#34;&gt;here&lt;/a&gt;.
However we will use &lt;a href=&#34;https://github.com/GoogleCloudPlatform/cloud-builders-community/tree/master/firebase&#34;&gt;this docker image&lt;/a&gt;.
Clone the &lt;a href=&#34;https://github.com/GoogleCloudPlatform/cloud-builders-community.git&#34;&gt;cloud-builders-community repo&lt;/a&gt;
move the &lt;code&gt;firebase&lt;/code&gt; folder to your app&#39;s root directory. you can delete the
repo from your computer. Or at least make it is not in your app directory.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; firebase-hosting-cb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git clone https://github.com/GoogleCloudPlatform/cloud-builders-community.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; cloud-builders-community&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;mv firebase ../ &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ../&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;rm -rf cloud-builders-community/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create the &lt;code&gt;cloudbuild.yaml&lt;/code&gt; file and paste in the following contents.
Make sure to replace &lt;code&gt;your-project-id&lt;/code&gt; with your actual project ID and
&lt;code&gt;YOUR_ENCRYPTED_TOKEN&lt;/code&gt; with the actual value.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;gcr.io/cloud-builders/docker&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-t&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;gcr.io/$PROJECT_ID/firebase&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;firebase&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;gcr.io/$PROJECT_ID/firebase&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;deploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;--project&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;$PROJECT_ID&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;secretEnv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;FIREBASE_TOKEN&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;secrets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;kmsKeyName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;projects/your-project-id/locations/global/keyRings/cicd-keyring/cryptoKeys/firebase-token&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;secretEnv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;FIREBASE_TOKEN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;YOUR_ENCRYPTED_TOKEN&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;images&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;gcr.io/$PROJECT_ID/firebase&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You have to grant the Cloud Build service account the CryptoKeyDecrypter
role. Run the following command to do so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;gcloud kms keys add-iam-policy-binding &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   &lt;span class=&#34;nv&#34;&gt;$KEY_NAME&lt;/span&gt; --location&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;global --keyring&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$KEYRING_NAME&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --member&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;serviceAccount:PROJECT_NUMBER@cloudbuild.gserviceaccount.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --role&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;roles/cloudkms.cryptoKeyDecrypter&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Replace &lt;code&gt;PROJECT_NUMBER&lt;/code&gt; by your actual projectNumber. You can use this
command &lt;code&gt;gcloud  projects describe your-project-id&lt;/code&gt; to find your project number.&lt;/p&gt;
&lt;h3 id=&#34;enable-apis&#34;&gt;Enable APIs&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud services &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; cloudbuild.googleapis.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   containerregistry.googleapis.com cloudkms.googleapis.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   firebase.googleapis.com cloudresourcemanager.googleapis.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   firebasehosting.googleapis.com&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;deploy&#34;&gt;Deploy&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;gcloud builds submit --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;cloudbuild.yaml .&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;!--
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;rm -rf cloud-builders-community/&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt; --&gt;
&lt;p&gt;If you are interested in checking your code to GitHub and deploy to Firebase
Hosting from there, check my &lt;a href=&#34;https://hrv2k.github.io/posts/integrate-github-with-cloud-build-deploy-to-cloud-run/&#34;&gt;post on integrating GitHub with Cloud Build&lt;/a&gt;.
It details how to step by step how to integrate GitHub and Cloud Build, and
how to trigger a deployment upon a push to your GitHub repo. Although in
that post, we deploy to Cloud Run, the process is exactly the same as far
as Cloud Build and GitHub are concerned. What is different is the steps
in the &lt;code&gt;cloudbuild.yaml&lt;/code&gt; file. We&#39;ve already configured &lt;code&gt;cloudbuild.yaml&lt;/code&gt;
to deploy to Firebase Hosting.&lt;/p&gt;
&lt;p&gt;The source code for this post, including the &lt;code&gt;cloudbuild.yaml&lt;/code&gt; file is available
&lt;a href=&#34;https://github.com/kakiang/firebase-hosting-cb&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks for reading 🙌. À la prochaine.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Mapping a Cloud Run Service to a Custom Domain</title>
      <link>https://hrv2k.github.io/post/mapping-a-cloud-run-service-to-a-custom-domain/</link>
      <pubDate>Wed, 15 Jan 2020 04:50:57 +0000</pubDate>
      
      <guid>https://hrv2k.github.io/post/mapping-a-cloud-run-service-to-a-custom-domain/</guid>
      <description>
        
          &lt;p&gt;&lt;strong&gt;When you deploy a service to Cloud Run, you are provided with a
default domain to access the service. However, you can use your own domain
or subdomain instead of the default one. So in this tutorial, I&#39;ll map a custom
domain to a Cloud Run service.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In the &lt;em&gt;Cloud Run services&lt;/em&gt; page, Click &lt;strong&gt;MANAGE CUSTOM DOMAINS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/map-domain-run/service.png&#34; alt=&#34;cloud Run service&#34;&gt;&lt;/p&gt;
&lt;p&gt;In the &lt;em&gt;Domain Mappings&lt;/em&gt; page, click &lt;strong&gt;ADD MAPPING&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/map-domain-run/add_mapping.png&#34; alt=&#34;Add Mapping&#34;&gt;&lt;/p&gt;
&lt;p&gt;In the &lt;em&gt;Add Mapping form&lt;/em&gt;, select the service you are mapping the custom
domain to, and your domain name. If your domain is not verified, you&#39;ll
be required to do it as shown below. Click &lt;strong&gt;VERIFY IN WEBMASTER CENTRAL&lt;/strong&gt;
to do it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/map-domain-run/add_mapping_form.png&#34; alt=&#34;Add Mapping&#34;&gt;&lt;/p&gt;
&lt;p&gt;The verification takes a couple of minutes. Click &lt;strong&gt;REFRESH&lt;/strong&gt; to check if
it&#39;s done.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/map-domain-run/verification.png&#34; alt=&#34;Add Mapping&#34;&gt;&lt;/p&gt;
&lt;p&gt;When verification completes successfully, specify the domain or subdomain
to map to the service you have selected, then click &lt;strong&gt;CONTINUE&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/map-domain-run/domain_to_use.png&#34; alt=&#34;Domain_to_use&#34;&gt;&lt;/p&gt;
&lt;p&gt;You are provided with the DNS records for the custom domain that
maps to your Cloud Run service. You&#39;ll need to add these records to the
host records at your domain registrar.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/map-domain-run/dns_record.png&#34; alt=&#34;Update DNS Records&#34;&gt;&lt;/p&gt;
&lt;p&gt;Copy the DNS records, log in to your domain registrar, go to the host
records section of your domain&#39;s configuration page and then add the records.
Depending on your registrar and the TTL configured in your DNS records,
can take a few minutes or several for the changes to take effect.&lt;/p&gt;
&lt;p&gt;Finally, when the DNS records have been successfully updated, you can use
your custom domain to access your deployed Cloud Run service.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/map-domain-run/end-result.png&#34; alt=&#34;End result&#34;&gt;&lt;/p&gt;
&lt;p&gt;When you map a Cloud Run service to a custom domain, an SSL certificate
is issued and managed for you automatically. The connections to and from
your service are secured.&lt;/p&gt;
&lt;p&gt;For more details about a Cloud Run service to a custom domain check out the
&lt;a href=&#34;https://cloud.google.com/run/docs/mapping-custom-domains&#34;&gt;Google Cloud documentation on mapping custom domains&lt;/a&gt;.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Getting started with Cloud Build</title>
      <link>https://hrv2k.github.io/post/getting-started-with-cloud-build/</link>
      <pubDate>Fri, 06 Dec 2019 06:41:35 +0000</pubDate>
      
      <guid>https://hrv2k.github.io/post/getting-started-with-cloud-build/</guid>
      <description>
        
          &lt;h2 id=&#34;1-what-is-cloud-build&#34;&gt;1. What is Cloud Build?&lt;/h2&gt;
&lt;p&gt;Cloud Build is a Google&#39;s service that offers
&lt;a href=&#34;https://cloud.google.com/docs/ci-cd/&#34;&gt;CI/CD&lt;/a&gt; fonctionalities
that cover all the software development stages in cloud as well as in
on-premise environments. Essentially, you can use Cloud Build to build,
test and deploy your application by providing it with a
&lt;a href=&#34;https://cloud.google.com/cloud-build/docs/build-config&#34;&gt;build config file&lt;/a&gt;
that contains the tasks you want Cloud Build to execute. The build config file has
&lt;a href=&#34;https://cloud.google.com/cloud-build/docs/build-config#structure_of_a_build_config_file&#34;&gt;many sections&lt;/a&gt;,
and each section can have many fields. One of the sections, maybe the most
important, is the &lt;strong&gt;Build steps&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;2-build-config-file&#34;&gt;2. Build config file&lt;/h2&gt;
&lt;h3 id=&#34;21-build-steps&#34;&gt;2.1. Build steps&lt;/h3&gt;
&lt;p&gt;Build steps is one of the sections of the build config file. A build step
has a &lt;code&gt;name&lt;/code&gt; field and an &lt;code&gt;args&lt;/code&gt; field. The &lt;code&gt;name&lt;/code&gt; field specifies a
&lt;a href=&#34;https://github.com/GoogleCloudPlatform/cloud-builders&#34;&gt;builder&lt;/a&gt;,
which is a CLI tool such as docker, kubectl, npm, gcloud, git etc.,
running in a container image. But we can&#39;t just use these tools without
passing them a command, and sometimes an argument. That&#39;s where the
&lt;code&gt;args&lt;/code&gt; field comes in. It takes a list of arguments and passes them to
the tool that&#39;s running in the builder referenced by the &lt;code&gt;name&lt;/code&gt; field.
And according to the
&lt;a href=&#34;https://cloud.google.com/cloud-build/docs/build-config&#34;&gt;build config docs&lt;/a&gt;,
&amp;quot;If the builder used in the build step has an entrypoint, args will be
used as arguments to that entrypoint. If the builder does not define an
entrypoint, the first element in args will be used as the entrypoint,
and the remainder will be used as arguments.&amp;quot; A build step has many other
fields like &lt;code&gt;env&lt;/code&gt; that takes a list of environment variables, and
&lt;code&gt;timeout&lt;/code&gt; that sets a time limit for executing the step, etc.&lt;/p&gt;
&lt;p&gt;If we were to build a container image using docker, we&#39;d use the
&lt;code&gt;docker build&lt;/code&gt; command. And we&#39;d push it to Container Registry using the
&lt;code&gt;docker push&lt;/code&gt; command.
However, using Cloud Build, we put all these commands in a config file
called &lt;code&gt;cloudbuild.yaml&lt;/code&gt; and run them at once. Of course the commands are
executed sequentially, but we only have to deal with one command, the
command that launches the build process. The config file for building,
tagging and pushing a docker image looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;c&#34;&gt;# build config file&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/docker&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;build&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;-t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/project-id/hw-image:tag&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/docker&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;push&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/project-id/hw-image:tag&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;To submit the build, we run the following command in the directory that
contains the &lt;code&gt;Dockerfile&lt;/code&gt; and the &lt;code&gt;cloudbuild.yaml&lt;/code&gt; file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud builds submit&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the build config file isn&#39;t specified like above, it defaults to
&lt;code&gt;cloudbuild.yaml&lt;/code&gt;. But if the name of our build config file was not
the default one or wasn&#39;t in the current directory, we&#39;d have to specify
it in the command line like this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud builds submit --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;path/to/build_config_file.yaml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The build config file can be a YAML or JSON file.&lt;/p&gt;
&lt;h3 id=&#34;22-options&#34;&gt;2.2. Options&lt;/h3&gt;
&lt;p&gt;Another section that is part of the build config file structure is the
&lt;code&gt;options&lt;/code&gt; field. It specifies the arguments that are used for the build,
although they are optional.&lt;/p&gt;
&lt;p&gt;One of the most interesting options is the &lt;code&gt;machineType&lt;/code&gt;. Since the
builds run on the GCP, you can request for a high-CPU VM
(n1-highcpu-8, n1-highcpu-32) to
&lt;a href=&#34;https://cloud.google.com/cloud-build/docs/speeding-up-builds#using_custom_virtual_machine_sizes&#34;&gt;speed up your build&lt;/a&gt;.
How do you do that? Add the &lt;code&gt;machineType&lt;/code&gt; option to the build config file
like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;c&#34;&gt;# build config file&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/docker&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;build&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;-t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/project-id/hw-image:tag&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/docker&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;push&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/project-id/hw-image:tag&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;machineType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;N1_HIGHCPU_8&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Or, instead of specifying it in the build config file, we can use the
&lt;code&gt;--machine-type&lt;/code&gt; flag in the command line:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud builds submit --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;path/to/build_config_file.yaml &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --machine-type&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;n1-highcpu-8 .&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can request for a custom disk size up to 1000 GB by using the
&lt;code&gt;diskSizeGb&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;There are &lt;a href=&#34;https://cloud.google.com/cloud-build/docs/build-config&#34;&gt;plenty of options&lt;/a&gt;
that you can use for your builds&lt;/p&gt;
&lt;h3 id=&#34;23-substitutions&#34;&gt;2.3. Substitutions&lt;/h3&gt;
&lt;p&gt;When writing your build config file, you don&#39;t have to write out explicitly
your project ID. You can simply specify it by using
the a &lt;a href=&#34;https://cloud.google.com/cloud-build/docs/configuring-builds/substitute-variable-values&#34;&gt;substitution variable&lt;/a&gt;
&lt;code&gt;$PROJECT_ID&lt;/code&gt;. And the value of this variable will be resolved by Cloud
Build at runtime to the actual project ID that is set in the local
configuration. Cloud Build provides built-in substitutions such as
&lt;code&gt;$PROJECT_ID&lt;/code&gt;, &lt;code&gt;$BUILD_ID&lt;/code&gt;, etc. We can also define our own.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/docker&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;build&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;-t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/$PROJECT_ID/hw-image:tag&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# push image to Container Registry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;images&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/$PROJECT_ID/hw-image:tag&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;24-cloud-build-artifacts&#34;&gt;2.4. Cloud Build Artifacts&lt;/h3&gt;
&lt;p&gt;When we build a container image with Cloud Build, we can push it
to Container Registry in two different ways: first, by executing
a step that runs &lt;code&gt;docker push&lt;/code&gt; command or second, by adding an &lt;code&gt;images&lt;/code&gt;
field in the build config file and listing the images to store, like above.
So we can store a docker image in Container Registry as part of the build
flow or after the build is completed.&lt;/p&gt;
&lt;p&gt;But what about anything else that is not a container image, non-container
artifacts?  We use the &lt;code&gt;artifacts&lt;/code&gt; field in a build config file to store
them to Cloud Storage location. You specify the Cloud Storage location
where the artifacts must be stored and the paths to the artifacts to be
stored:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;artifacts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;STORAGE_LOCATION]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;paths&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ARTIFACT_PATH],[ARTIFACT_PATH], ...]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/javac&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HelloWorld.java&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;artifacts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gs://[STORAGE_LOCATION]&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;paths&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HelloWorld.java&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HelloWorld.class&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Learn more about &lt;a href=&#34;https://cloud.google.com/cloud-build/docs&#34;&gt;Cloud Build&lt;/a&gt;
and &lt;a href=&#34;https://cloud.google.com/cloud-build/docs/build-config&#34;&gt;the structure of build config&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-dockerize-your-react-app-and-deploy-it-to-cloud-run-using-cloud-build&#34;&gt;3. Dockerize your React App and deploy it to Cloud Run using Cloud Build&lt;/h2&gt;
&lt;p&gt;In a bid to consolidate our knowledge of the fundamentals of Cloud Build,
we are going to package up a simple React App in a container image, build
and tag it using docker, push it to Container Registry and deploy it to
Cloud Run, all using Cloud Build. We will use nginx to serve the React app.&lt;/p&gt;
&lt;h3 id=&#34;31-create-react-app&#34;&gt;3.1. create-react-app&lt;/h3&gt;
&lt;p&gt;This is not a React tutorial. However we will generate React boilerplate
code using &lt;a href=&#34;https://github.com/facebook/create-react-app&#34;&gt;Facebook Create React App&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Assuming that you have &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node&lt;/a&gt; installed, run the
following command to install &lt;code&gt;create-react-app&lt;/code&gt; and create a React app.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;npm install -g create-react-app &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; create-react-app docker-react-app-starter &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; docker-react-app-starter&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run the following command to start the app.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;npm start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Feel free to edit the &lt;code&gt;src/App.js&lt;/code&gt; file for demo purpose. You may replace
&lt;code&gt;&amp;lt;p&amp;gt;Edit &amp;lt;code&amp;gt;src/App.js&amp;lt;/code&amp;gt; and save to reload.&amp;lt;/p&amp;gt;&lt;/code&gt; with the following snippet.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  React App running inside a container and deployed to Cloud Run using
  Cloud Build
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;32-dockerfile&#34;&gt;3.2. Dockerfile&lt;/h3&gt;
&lt;p&gt;Our React app is ready to be packaged up. Let&#39;s create the &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Dockerfile&#34; data-lang=&#34;Dockerfile&#34;&gt;&lt;span class=&#34;c&#34;&gt;#### Stage 1: Build the react application&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; node:10.15.2-alpine as build&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Configure the main working directory inside the docker image.&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# This is the base directory used in any further RUN, COPY, and CMD&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WORKDIR&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; /app&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Copy the package.json and package-lock.json inside the WORKDIR and install&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# the dependencies.&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; package.json package-lock.json ./&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; npm install&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Copy the main application&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; . ./&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Build the application&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; npm run build&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#### Stage 2: Serve the React application from Nginx&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; nginx:1.17.0-alpine&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Copy the react build from Stage 1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; --from&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;build /app/build /var/www&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Copy our custom nginx config&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; nginx.conf /etc/nginx/nginx.conf&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Expose port 8080 to the Docker host, so we can access it from the outside.&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;EXPOSE&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; 8080&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Run nginx&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CMD&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;nginx&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-g&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;daemon off;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This is how the custom nginx config looks like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# auto detects a good number of processes to run&lt;/span&gt;
worker_processes auto&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#Provides the configuration file context in which the directives that affect connection processing are specified.&lt;/span&gt;
events &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Sets the maximum number of simultaneous connections that can be opened by a worker process.&lt;/span&gt;
    worker_connections 8000&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Tells the worker to accept multiple connections at a time&lt;/span&gt;
    multi_accept on&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

http &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    include       /etc/nginx/mime.types&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    default_type  application/octet-stream&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# Sets the path, format, and configuration for a buffered log write&lt;/span&gt;
    log_format compression &lt;span class=&#34;s1&#34;&gt;&amp;#39;$remote_addr - $remote_user [$time_local] &amp;#39;&lt;/span&gt;
        &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34;$request&amp;#34; $status $upstream_addr &amp;#39;&lt;/span&gt;
        &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34;$http_referer&amp;#34; &amp;#34;$http_user_agent&amp;#34;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    server &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# listen on port 8080&lt;/span&gt;
&lt;span class=&#34;hl&#34;&gt;        listen 8080&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# save logs here&lt;/span&gt;
        access_log /var/log/nginx/access.log compression&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# nginx root directory&lt;/span&gt;
        root /var/www&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# what file to serve as index&lt;/span&gt;
        index index.html index.htm&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

        location / &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# First attempt to serve request as file, then&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# as directory, then fall back to redirecting to index.html&lt;/span&gt;
            try_files &lt;span class=&#34;nv&#34;&gt;$uri&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$uri&lt;/span&gt;/ /index.html&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# Media: images, icons, video, audio, HTC&lt;/span&gt;
        location ~* &lt;span class=&#34;se&#34;&gt;\.&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;?:jpg&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;jpeg&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;gif&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;png&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;ico&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;cur&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;gz&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;svg&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;svgz&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;mp4&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;ogg&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;ogv&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;webm&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;htc&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;$ &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
          expires 1M&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
          access_log off&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
          add_header Cache-Control &lt;span class=&#34;s2&#34;&gt;&amp;#34;public&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# Javascript and CSS files&lt;/span&gt;
        location ~* &lt;span class=&#34;se&#34;&gt;\.&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;?:css&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;js&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;$ &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            try_files &lt;span class=&#34;nv&#34;&gt;$uri&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;404&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            expires 1y&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            access_log off&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            add_header Cache-Control &lt;span class=&#34;s2&#34;&gt;&amp;#34;public&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# Any route containing a file extension (e.g. /devicesfile.js)&lt;/span&gt;
        location ~ ^.+&lt;span class=&#34;se&#34;&gt;\.&lt;/span&gt;.+$ &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            try_files &lt;span class=&#34;nv&#34;&gt;$uri&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;404&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Line 23: We make the server listens on port 8080 because Cloud Run requires
the container listens on port defined by the &lt;code&gt;$PORT&lt;/code&gt; environment variable,
which is set to 8080.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Create the &lt;code&gt;.dockerignore&lt;/code&gt; file and paste in it the content of &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;33-test-locally&#34;&gt;3.3. Test locally&lt;/h3&gt;
&lt;p&gt;We can build and run the container image locally to make sure it works.
You can continue to the next section, this section is totally optional.&lt;/p&gt;
&lt;p&gt;You need to have &lt;a href=&#34;https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce&#34;&gt;docker&lt;/a&gt;
installed to build and run images locally. Make sure you are in the docker-react-app-starter root directory, where the
&lt;code&gt;Dockerfile&lt;/code&gt; is located, and run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;docker build -t docker-react-app-starter:0.1 .&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don&#39;t forget the &lt;code&gt;.&lt;/code&gt; character at the end, it sets the build context to the current directory.&lt;/p&gt;
&lt;p&gt;After a successful completion, you will see the message
&lt;strong&gt;Successfully tagged docker-react-app-starter:0.1&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Then you can now run the image with this command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;docker run --publish 80:8080 docker-react-app-starter:0.1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open your browser and navigate to &lt;a href=&#34;127.0.0.1:80&#34;&gt;127.0.0.1:80&lt;/a&gt; to access
your React app.&lt;/p&gt;
&lt;p&gt;Exit the command line to stop the container.&lt;/p&gt;
&lt;h3 id=&#34;34-cloudbuildyaml&#34;&gt;3.4. cloudbuild.yaml&lt;/h3&gt;
&lt;p&gt;Now let&#39;s create the &lt;code&gt;cloudbuild.yaml&lt;/code&gt; file at the &lt;code&gt;docker-react-app-starter&lt;/code&gt;
root directory&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Build the container image, we use the substitution var $PROJECT_ID&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/docker&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;build&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;-t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/$PROJECT_ID/docker-react-app-starter:0.1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Push the container image to Container Registry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/docker&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;push&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/$PROJECT_ID/docker-react-app-starter:0.1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Deploy container image to Cloud Run&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/gcloud&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;beta&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;run&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;deploy&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;docker-react-app-starter-service&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--image&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/$PROJECT_ID/docker-react-app-starter:0.1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--region&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;us-central1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--memory&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;128Mi&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--port&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;80&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--platform&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;managed&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--allow-unauthenticated&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# We use the options section to request for an 8 CPUs machineType VM.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# It&amp;#39;s an overkill for this tiny build though&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;machineType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;N1_HIGHCPU_8&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;images&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;gcr.io/$PROJECT_ID/docker-react-app-starter:0.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Duplicate &lt;code&gt;.dockerignore&lt;/code&gt;, then rename the duplicate &lt;code&gt;.gcloudignore&lt;/code&gt;.
The &lt;code&gt;.dockerignore&lt;/code&gt; file is ignored by Cloud Build.&lt;/p&gt;
&lt;h3 id=&#34;35-gcp-logistics&#34;&gt;3.5. GCP logistics&lt;/h3&gt;
&lt;p&gt;From now on, we are going to use
&lt;a href=&#34;https://cloud.google.com/sdk/docs/&#34;&gt;Cloud SDK gcloud command-line tool&lt;/a&gt;
and work with a GCP project.&lt;/p&gt;
&lt;p&gt;Run this command to log in to GCP:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud auth login&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Set the project that you will be working with. Replace &lt;code&gt;PROJECT_ID&lt;/code&gt; by the actual project ID.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud config &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; project PROJECT_ID&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Export the project ID as the environment variable &lt;code&gt;$GCLOUD_PROJECT&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;GCLOUD_PROJECT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gcloud config get-value project&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let&#39;s also export the project number, because we are going to use it a
couple of times.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PROJECT_NUMBER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gcloud projects describe &lt;span class=&#34;nv&#34;&gt;$GCLOUD_PROJECT&lt;/span&gt; --format&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;value(projectNumber)&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;36-enable-apis&#34;&gt;3.6. Enable APIs&lt;/h3&gt;
&lt;p&gt;To build container images on the GCP and deploy them to Cloud Run, we
have to enable Cloud Build API, Container Registry API and Cloud Run API:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud services &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; cloudbuild.googleapis.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  containerregistry.googleapis.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  run.googleapis.com&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;37-iam-permissions&#34;&gt;3.7. IAM permissions&lt;/h3&gt;
&lt;p&gt;Before we can start the build, we have to grant Cloud Build service account
the Cloud Run Admin role (&lt;code&gt;roles/run.admin&lt;/code&gt;) so that it has permissions to
deploy to Cloud Run.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud projects add-iam-policy-binding &lt;span class=&#34;nv&#34;&gt;$GCLOUD_PROJECT&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;      --member&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;serviceAccount:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PROJECT_NUMBER&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;@cloudbuild.gserviceaccount.com&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;      --role&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;roles/run.admin&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We also have to grant Cloud Build service account the service account user role.
I explain the reason why &lt;a href=&#34;https://kakiang.github.io/blog/posts/birthday-app-2/#iam-permissions&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud iam service-accounts add-iam-policy-binding &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;nv&#34;&gt;$PROJECT_NUMBER&lt;/span&gt;-compute@developer.gserviceaccount.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;      --member&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;serviceAccount:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PROJECT_NUMBER&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;@cloudbuild.gserviceaccount.com&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;      --role&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;roles/iam.serviceAccountUser&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;38-gcloud-builds-submit&#34;&gt;3.8. gcloud builds submit&lt;/h3&gt;
&lt;p&gt;We are all set. We can now submit the build to Cloud Build.
From the root directory of docker-react-app-starter where the &lt;code&gt;Dockerfile&lt;/code&gt; and
&lt;code&gt;cloudbuild.yaml&lt;/code&gt; are located, run this command to start the build:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud builds submit&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yeah it&#39;s only 3 words &amp;amp;#129327.&lt;/p&gt;
&lt;p&gt;After successful completion, you will see &lt;strong&gt;SUCCESS&lt;/strong&gt; at the end of the output.&lt;/p&gt;
&lt;p&gt;Look for the URL of the deployed service in the output, it looks
something like this &lt;code&gt;https://docker-react-app-starter-service-[hash]-uc.a.run.app&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/docker-react-app.jpg&#34; alt=&#34;docker-react-app-service on Cloud Run&#34;&gt;&lt;/p&gt;
&lt;p&gt;Run this command to list your Cloud Run services.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud beta run services list --platform&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;managed&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that&#39;s it. For the subsequent builds and deployments of the app, you
won&#39;t have to go through all the steps before submitting your build. You just
work on your app and submit the build to Cloud Build with &lt;code&gt;gcloud builds submit&lt;/code&gt;,
and navigate to the URL of the deployed service. Enabling APIs, setting IAM
permissions are done only once.&lt;/p&gt;
&lt;p&gt;Find the source code of &lt;code&gt;docker-react-app-starter&lt;/code&gt; on &lt;a href=&#34;https://github.com/kakiang/docker-react-app-starter&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks for reading :raised_hands:. À la prochaine&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Horizontal Scaling vs Vertical Scaling</title>
      <link>https://hrv2k.github.io/post/horizontal-vs-vertical-scaling/</link>
      <pubDate>Sat, 30 Nov 2019 17:15:45 +0000</pubDate>
      
      <guid>https://hrv2k.github.io/post/horizontal-vs-vertical-scaling/</guid>
      <description>
        
          &lt;h1 id=&#34;what-is-it&#34;&gt;What Is it?&lt;/h1&gt;
&lt;p&gt;Horizontal scaling means adding more instances (e.g. VMs) to
previously &#39;running&#39; instance(s). Vertical scaling onn the other hand,
means adding more power (e.g. cpu, memory) to a &#39;running&#39; instance.&lt;/p&gt;
&lt;p&gt;For example, let&#39;s say you have an instance that is running a workload,
and that instance is no longer able to handle the workload. To solve the
problem you add another instance and share the workload between the 2
instances; that&#39;s horizontal scaling. But if instead of adding another
instance to handle the increasing workload, you increase the number of
CPUs and memory size of the running instance, that&#39;s vertical scaling.&lt;/p&gt;
&lt;p&gt;Horizontal scaling is also designated by scaling out. And vertical
scaling is synonymous with scaling up.&lt;/p&gt;
&lt;h1 id=&#34;example-cloud-spanner-and-cloud-sql&#34;&gt;Example: Cloud Spanner and Cloud SQL&lt;/h1&gt;
&lt;p&gt;According to the &lt;a href=&#34;https://cloud.google.com/spanner/&#34;&gt;Cloud Spanner page&lt;/a&gt;,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Cloud Spanner is the first scalable, enterprise-grade, globally-distributed, and strongly consistent database service built for the cloud specifically to combine the benefits of relational database structure with non-relational horizontal scale.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;According to the &lt;a href=&#34;https://cloud.google.com/sql/&#34;&gt;Cloud SQL page&lt;/a&gt;,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Cloud SQL is a fully managed database service that makes it easy to set up, maintain, manage, and administer your relational PostgreSQL, MySQL, and SQL Server databases in the cloud.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Cloud Spanner has the ability to scale horizontally
(like other &lt;a href=&#34;https://en.wikipedia.org/wiki/NoSQL&#34;&gt;NoSQL databases&lt;/a&gt;).
That means we start off with one node (i.e VM instance), and when
that single node reaches its capacity limit, another node is spun up and
added to the previous node to handle the load and so on. Cloud SQL
doesn&#39;t do that. If your Cloud SQL instance is no longer able to handle
the amount of data it receives, its storage capacity increases.
So Cloud Spanner scales out/horizontally by adding more instances to
its cluster to handle increasing workload, whereas Cloud SQL scales
up/vertically by increasing its storage capacity. Because Cloud Spanner
and Cloud SQL are GCP&#39;s fully-managed services, the scalability feature
is automated. If they weren&#39;t automated, we&#39;d have to do the scaling
ourselves, as it is the case in most on-premises environments.&lt;/p&gt;
&lt;p&gt;In fact horizontal scaling is possible with relational databases, it&#39;s
called sharding. But implementing it is a pain in the neck.&lt;/p&gt;
&lt;p&gt;What&#39;s interesting with Cloud Spanner is despite the fact that it scales
horizontally, it supports transactions and strong consistency. NoSQL
databases aren&#39;t usually consistent, because it&#39;s difficult to have
consistency when you are duplicating data. And when you don&#39;t have
consistency there is no point in supporting transactions.&lt;/p&gt;
&lt;p&gt;To scale, Cloud Spanner uses multiple nodes. That means the data is in
no single node, they are spread accross different nodes. Essentially,
to have a consistent database, you need to have a mechanism that checks
if after inserting new data, the database will still remain consistent.
Your database has to go from one valid state to another after any
completed operation. Now, with a database that operates accross a cluster
of nodes, you have to check every node if you want to have a strongly
consistent database; and that would be a lot of processing especially
if you have a large amount of data.
You can&#39;t do it without paying some performance cost. That is
why when it comes to ingesting large amount of data at high velocity,
&lt;a href=&#34;https://cloud.google.com/bigtable/&#34;&gt;Cloud Bigtable&lt;/a&gt; does it better than
Cloud Spanner. I believe that&#39;s mostly simply because Cloud Spanner cares about
consistency while Cloud Bigtable doesn&#39;t. That makes Cloud Spanner not
suitable for high-speed ingestion of large amount of data, because it
has to check for consistency. Whereas Cloud Bigtable is very
good at ingesting data at high-velocity, it&#39;s low-latency and supports
millions of operations per second; it&#39;s a NoSQL database and doesn&#39;t care
about consistency.&lt;/p&gt;
&lt;p&gt;To deep dive into Cloud Spanner, check this
&lt;a href=&#34;https://ai.google/research/pubs/pub39966&#34;&gt;article&lt;/a&gt; by Google&#39;s engineers&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Deploy Cloud Run Services, Schedule invocations Using Cloud Scheduler</title>
      <link>https://hrv2k.github.io/post/deploy-cloud-run-services-schedule-invocations-using-cloud-scheduler/</link>
      <pubDate>Thu, 21 Nov 2019 10:34:07 +0000</pubDate>
      
      <guid>https://hrv2k.github.io/post/deploy-cloud-run-services-schedule-invocations-using-cloud-scheduler/</guid>
      <description>
        
          &lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: This post is about Cloud Run and Scheduling a call of a Cloud Run
service with Cloud Scheduler. Precisely we use Cloud Run to deploy a
stateless birthday reminder app and use Cloud Scheduler to call the deployed
service API.&lt;/p&gt;
&lt;p&gt;In the &lt;a href=&#34;https://hrv2k.github.io/posts/invoking-cloud-functions-with-cloud-scheduler/&#34;&gt;previous post&lt;/a&gt;, I deployed a simple birthday reminder app on Google Cloud Functions and scheduled a cron job using Cloud Scheduler to invoke the app every day. Upon invocation, the app checks for birthdays and sends out an SMS to your configured phone number if there is at least one birthday that day. It works fine. Today, I am going to package up the birthday app in a container image using Docker, push it to Google Container Registry and then deploy it to Cloud Run.&lt;/p&gt;
&lt;h2 id=&#34;1-what-is-docker&#34;&gt;1. What is Docker&lt;/h2&gt;
&lt;p&gt;Docker is a platform that allows you to package up your application and its dependencies in a container image. Essentially it allows you to build, share and run container images.&lt;/p&gt;
&lt;h2 id=&#34;2-what-is-a-container-image&#34;&gt;2. What is a container image&lt;/h2&gt;
&lt;p&gt;It&#39;s the image of a container. It&#39;s built from a file called Dockerfile, which is a script-like file that contains a series of commands which are to be executed successively by docker to create a container image.&lt;/p&gt;
&lt;p&gt;A container image is your app bundled up together with all the dependencies that are necessary to make it run. You can package &#39;anything&#39; in a container image. Any runtime, any binary, any library. Instead of &lt;code&gt;container image&lt;/code&gt;, often we just say &lt;code&gt;image&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;3-what-is-a-container&#34;&gt;3. What is a container&lt;/h2&gt;
&lt;p&gt;A container is a running image. Basically when your app packaged up in a container image is spun up (executed), it&#39;s called container.&lt;/p&gt;
 &lt;!-- It is built out of an image, which is the definition of the container. --&gt;
&lt;h2 id=&#34;4-what-is-container-registry&#34;&gt;4. What is Container Registry&lt;/h2&gt;
&lt;p&gt;Container Registry is Google&#39;s repository for container images. Put simply, it&#39;s like the GitHub of container images, however it&#39;s not public. The largest public repository for container images is &lt;a href=&#34;https://hub.docker.com/&#34;&gt;Docker Hub&lt;/a&gt;. With Google Container Registry, you can manage your Docker images, perform vulnerability analysis, and because it&#39;s a GCP service, you decide who can access what with fine-grained access control using IAM policies.&lt;/p&gt;
&lt;h2 id=&#34;5-what-is-cloud-run&#34;&gt;5. What is Cloud Run&lt;/h2&gt;
&lt;p&gt;Cloud Run is the Cloud Functions for containers. It&#39;s a fully managed serverless compute solution that enables you to run any stateless application. It is really flexible, since you can code up an app using any runtime and any library, package it up in a container image and run it on Cloud Run. It&#39;s not limited to a couple of runtimes as it is the case with &lt;a href=&#34;https://cloud.google.com/functions/docs/&#34;&gt;Cloud Functions&lt;/a&gt;. But similar to Cloud Functions, Cloud Run can scale down to zero when it&#39;s not being used, thereby costing nothing. It can also scale up to handle increasing user requests.&lt;/p&gt;
&lt;h2 id=&#34;6-the-code&#34;&gt;6. The code&lt;/h2&gt;
&lt;p&gt;Let&#39;s create a sqlite database from the calendar file using the script below. The script creates a sqlite table called &lt;code&gt;birthdays&lt;/code&gt;, loopS through the birthday events in the calendar file and insert them into the &lt;code&gt;birthdays&lt;/code&gt; table.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# process_calendar.py&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;icalendar&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Calendar&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;collections&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;namedtuple&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timedelta&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sqlite3&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;birth_day&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;namedtuple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;BD&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;month&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;day&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;read_calendar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cal.ics&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;calics&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Calendar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;from_ical&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;component&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;walk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;VEVENT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SUMMARY&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#39;s birthday&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;birth_date&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DTSTART&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# print(name, birth_date.strftime(&amp;#34;%b %d&amp;#34;))&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;birth_day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                            &lt;span class=&#34;n&#34;&gt;month&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;birth_date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strftime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;%b&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
                            &lt;span class=&#34;n&#34;&gt;day&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;birth_date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;persist_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;connection&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sqlite3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;birthdays.db&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;connection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;CREATE TABLE IF NOT EXISTS birthdays
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;        (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;        name INTEGER NOT NULL,
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;        month TEXT NOT NULL,
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;        day INTEGER NOT NULL)&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;read_calendar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;INSERT INTO birthdays VALUES (NULL,?,?,?)&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                       &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;month&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;connection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;connection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;persist_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The script outputs a file, &lt;code&gt;birthdays.db&lt;/code&gt;, which is essentially the birthday data in a sqlite database.&lt;/p&gt;
&lt;p&gt;Next, let&#39;s write a script that given a month and a day, returns the names of your friends whose birthdays are on the specified date.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# birthdays.py&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timedelta&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sqlite3&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fetch_birthday_friends_by_date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;month&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;connection&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sqlite3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;birthdays.db&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;connection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;f_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;SELECT DISTINCT name FROM birthdays
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;							WHERE month=? and day=?&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                         &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;month&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,)):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;f_list&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;connection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;{} {}&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;month&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f_list&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Finally let&#39;s write the code that will call &lt;code&gt;fetch_birthday_friends_by_date&lt;/code&gt; function. It&#39;s a simple Flask app.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# app.py&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;flask&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Flask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;twilio.rest&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Client&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;birthdays&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;bdays&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Flask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;send_sms&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;from_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;+166...&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;+233...&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Your Account Sid and Auth Token from twilio.com/console&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;account_sid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;auth_token&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;client&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;account_sid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;auth_token&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;messages&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;from_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;from_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@app.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;h1&amp;gt;Hello Containerizers!!&amp;lt;/h1&amp;gt;&amp;#34;&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@app.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/birthday_friends&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;defaults&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;month&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;day&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@app.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/birthday_friends/&amp;lt;month&amp;gt;-&amp;lt;int:day&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_birthday_friends&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;month&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;month&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;today&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;month&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strftime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;%b&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;day&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;day&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;birthdate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bdays&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fetch_birthday_friends_by_date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;month&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;bday_friends&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;bday_friends&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bday_friends&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;names&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;birthdate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;bday_friends&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;names&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f_list&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;notify&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;send_sms&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bday_friends&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bday_friends&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;0.0.0.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;PORT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8080&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;debug&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;7-build-and-run-the-container-image&#34;&gt;7. Build and run the container image&lt;/h2&gt;
&lt;p&gt;Now, let&#39;s get to the actual docker image building. We are packaging the birthday app in a container image.&lt;/p&gt;
&lt;p&gt;To build a container image, we have to tell Docker how to do step by step. The Dockerfile is used for that purpose. Inside of the directory that contains the birthday app, we create a file called Dockerfile that contains the following instructions:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Dockerfile&#34; data-lang=&#34;Dockerfile&#34;&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; python:3.7-alpine&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; pip install --upgrade pip&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WORKDIR&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; /app&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; requirements.txt ./&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; pip install --no-cache-dir --requirement requirements.txt&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; pip install Flask gunicorn&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; birthdays.db birthdays.py app.py ./&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CMD&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; gunicorn --bind :&lt;span class=&#34;nv&#34;&gt;$PORT&lt;/span&gt; --workers &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; --threads &lt;span class=&#34;m&#34;&gt;8&lt;/span&gt; app:app&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# CMD python app.py&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Once the Dockerfile is right and ready, we can now build the container image.
We will build it using &lt;code&gt;docker build&lt;/code&gt; command and run it locally using &lt;code&gt;docker run&lt;/code&gt; command. Then we will use &lt;a href=&#34;https://cloud.google.com/cloud-build/&#34;&gt;Cloud Build&lt;/a&gt; to do the same thing, except we won&#39;t run the container locally, we will push it to Container Registry and deploy it to Cloud Run.&lt;/p&gt;
&lt;h3 id=&#34;71-build-and-run-locally&#34;&gt;7.1. Build and run locally&lt;/h3&gt;
&lt;p&gt;Before we proceed, make sure you have docker installed. If you are not certain, run &lt;code&gt;docker version&lt;/code&gt; command to check it. The output looks something like this&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Client: Docker Engine - Community
 Version:           19.03.5
 API version:       1.40
 Go version:        go1.12.12
 Git commit:        633a0ea838
 Built:             Wed Nov &lt;span class=&#34;m&#34;&gt;13&lt;/span&gt; 07:29:52 &lt;span class=&#34;m&#34;&gt;2019&lt;/span&gt;
 OS/Arch:           linux/amd64
 Experimental:      &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;

Server: Docker Engine - Community
 Engine:
  Version:          19.03.5
  API version:      1.40 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;minimum version 1.12&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  Go version:       go1.12.12
  Git commit:       633a0ea838
  Built:            Wed Nov &lt;span class=&#34;m&#34;&gt;13&lt;/span&gt; 07:28:22 &lt;span class=&#34;m&#34;&gt;2019&lt;/span&gt;
  OS/Arch:          linux/amd64
  Experimental:     &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;
 containerd:
  Version:          1.2.10
  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339
 runc:
  Version:          1.0.0-rc8+dev
  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657
 docker-init:
  Version:          0.18.0
  GitCommit:        fec3683&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Otherwise &lt;a href=&#34;https://docs.docker.com/installation/#installation&#34;&gt;install it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To build the image locally, we use the &lt;code&gt;docker build&lt;/code&gt; command which requires a &lt;code&gt;Dockerfile&lt;/code&gt; and a context to run. The context is the content of the directory that contains the files (code) of your app. According to the &lt;a href=&#34;https://docs.docker.com/engine/reference/builder/&#34;&gt;Dockerfile reference&lt;/a&gt;, the context can be a Git repository location or a directory on your local filesystem. In our case here, we use the current directory as the context.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker build --tag bdays-reminder:0.1 .&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We use &lt;code&gt;--tag&lt;/code&gt; flag to give a name to our container image and tag it. The tag is placed after &lt;code&gt;:&lt;/code&gt; after the name, and it&#39;s optional.
The output of the &lt;code&gt;docker build&lt;/code&gt; command above looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Sending build context to Docker daemon  41.98kB
Step 1/8 : FROM python:3.7-alpine
 ---&amp;gt; b11d2a09763f
Step 2/8 : RUN pip install --upgrade pip
 ---&amp;gt; Using cache
 ---&amp;gt; 75d2e0d46e9b
Step 3/8 : WORKDIR /app/
 ---&amp;gt; Using cache
 ---&amp;gt; 139fdb3d1033
Step 4/8 : COPY requirements.txt /tmp/
 ---&amp;gt; 6eb80fa72a7d
Step 5/8 : RUN pip install --no-cache-dir --requirement /tmp/requirements.txt
 ---&amp;gt; Running in c01ad97ad47f
Collecting &lt;span class=&#34;nv&#34;&gt;flask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;1.0.2
  Downloading https://files.pythonhosted.org/packages/7f/e7/08578774ed4536d3242b14dacb4696386634607af824ea997202cd0edb4b/Flask-1.0.2-py2.py3-none-any.whl &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;91kB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Collecting &lt;span class=&#34;nv&#34;&gt;twilio&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;6.26.2
.......
Removing intermediate container c01ad97ad47f
 ---&amp;gt; 10ac84d3b59e
Step 6/8 : COPY birthdays.db birthdays.py sms.py app.py /app/
 ---&amp;gt; ad3e61d2fadb
Step 7/8 : ENV PORT &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt;
 ---&amp;gt; Running in a1f0fd4e9f29
Removing intermediate container a1f0fd4e9f29
 ---&amp;gt; fdc22f2b084e
Step 8/8 : CMD python app.py
 ---&amp;gt; Running in f7df67c6aeac
Removing intermediate container f7df67c6aeac
 ---&amp;gt; 44c25171620f
Successfully built 44c25171620f
Successfully tagged bdays-reminder:0.1&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If it worked, you should see the message &lt;em&gt;&amp;quot;Successfully tagged bdays-reminder:0.1&amp;quot;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Run &lt;code&gt;docker images&lt;/code&gt; to list docker images. The output looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;REPOSITORY           TAG        IMAGE ID          CREATED           SIZE
bdays-reminder       0.1        44c25171620f      &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; hours ago      123MB&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If the build has been successful, you can now run the image.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -d --publish 8080:8080 bdays-reminder:0.1&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;With the command above, we are running a container from the image &lt;code&gt;bdays-reminder:v1&lt;/code&gt; on port 8080 as a deamon (note the &lt;code&gt;-d&lt;/code&gt;). The command outputs the container ID.&lt;/p&gt;
&lt;p&gt;We can run &lt;code&gt;docker ps&lt;/code&gt; or &lt;code&gt;docker container ls&lt;/code&gt; to display the list of containers that are spun up. Sometimes the output of this command is cumbersome. We can choose what information to display.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker ps --format &lt;span class=&#34;s2&#34;&gt;&amp;#34;table {{.ID}}\\t{{.Image}}\\t{{.Status}}\\t{{.Ports}}&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We get a neat output that looks like this. Our container is up and running on port 80880,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;CONTAINER ID      IMAGE                STATUS            PORTS
db3382796905      bdays-reminder:0.1   Up &lt;span class=&#34;m&#34;&gt;21&lt;/span&gt; minutes     0.0.0.0:8080-&amp;gt;8080/tcp&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Navigate to &lt;a href=&#34;127.0.0.1:8080&#34;&gt;127.0.0.1:8080&lt;/a&gt;, &lt;a href=&#34;127.0.0.1:8080/birthday_friends&#34;&gt;127.0.0.1:8080/birthday_friends&lt;/a&gt;.
Trigger a SMS to be sent by hitting &lt;a href=&#34;127.0.0.1:8080/birthday_friends?notify=true&#34;&gt;127.0.0.1:8080/birthday_friends?notify=true&lt;/a&gt;. These routes were defined in the Flask app code.&lt;/p&gt;
&lt;p&gt;To stop a running container, we use &lt;code&gt;docker stop&lt;/code&gt; command with the container ID; for example in this case, the &lt;code&gt;container ID&lt;/code&gt; is &lt;code&gt;db3382796905&lt;/code&gt;. So to stop it, we run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker stop db3382796905&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Run &lt;code&gt;docker ps&lt;/code&gt; to make sure that the container has been effectively stopped.&lt;/p&gt;
&lt;h3 id=&#34;72-use-cloud-build-to-do-everything&#34;&gt;7.2. Use Cloud Build to do everything&lt;/h3&gt;
&lt;p&gt;In this section, we are going to use &lt;a href=&#34;https://cloud.google.com/cloud-build/&#34;&gt;Cloud Build&lt;/a&gt; to build and tag a Docker image, push the to Google Container Registry and deploy it to Cloud Run. Cloud Build is a Google&#39;s service that offers &lt;a href=&#34;https://cloud.google.com/docs/ci-cd/&#34;&gt;CI/CD&lt;/a&gt; &lt;a href=&#34;https://cloud.google.com/solutions/continuous-delivery/&#34;&gt;fonctionalities&lt;/a&gt; that cover all the software development stages in cloud environments as well as on premises environments. Essentially you submit the build, test and deployment processes to Cloud Build by providing the build steps in a configuration file. The builds run on the GCP and you can use high-CPU VMs to further increase the build speed.&lt;/p&gt;
&lt;p&gt;We will be using Cloud SDK gcloud command-line tool  If you haven&#39;t installed it yet, go ahead and &lt;a href=&#34;https://cloud.google.com/sdk/docs/&#34;&gt;install it&lt;/a&gt;. If you have already installed it, run &lt;code&gt;gcloud components update&lt;/code&gt; to have the latest available version.&lt;/p&gt;
&lt;p&gt;Run this command to log in to GCP&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud auth login&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Set the project that you will be working with. Replace &lt;code&gt;PROJECT_ID&lt;/code&gt; by the actual project ID.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud config &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; project PROJECT_ID&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Export the project ID as the environment variable &lt;code&gt;$GCLOUD_PROJECT&lt;/code&gt;; it will save us from the mechanical task of typing and typos.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;GCLOUD_PROJECT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gcloud config get-value project&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You can list all the projects you have access to with the current account by running &lt;code&gt;gcloud projects list&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Let&#39;s also export the project number, because we are going to use it multiple times.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PROJECT_NUMBER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gcloud projects describe &lt;span class=&#34;nv&#34;&gt;$GCLOUD_PROJECT&lt;/span&gt; --format&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;value(projectNumber)&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h4 id=&#34;enable-apis&#34;&gt;Enable APIs&lt;/h4&gt;
&lt;p&gt;To build container images on the GCP and deploy them to Cloud Run, we have to enable the Resource Manager API, Cloud Build API, the Container Registry API and Cloud Run API:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud services &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; cloudbuild.googleapis.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    containerregistry.googleapis.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    cloudresourcemanager.googleapis.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    run.googleapis.com&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h4 id=&#34;build-and-run&#34;&gt;Build and run&lt;/h4&gt;
&lt;p&gt;Now let&#39;s build a docker image and push it to Container Registry with the command below.
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud builds submit --tag gcr.io/&lt;span class=&#34;nv&#34;&gt;$GCLOUD_PROJECT&lt;/span&gt;/bdays-reminder:0.1&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Let&#39;s deploy the container image we just built to Cloud Run
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud beta run deploy bdays-reminder-service-m &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --image gcr.io/&lt;span class=&#34;nv&#34;&gt;$GCLOUD_PROJECT&lt;/span&gt;/bdays-reminder:0.1 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --region us-central1 --platform managed --memory 128Mi &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --timeout &lt;span class=&#34;m&#34;&gt;60&lt;/span&gt; --allow-unauthenticated&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Now, you are probably thinking, didn&#39;t you write &amp;quot;Tell Cloud Build to do everything&amp;quot;, but Cloud Build didn&#39;t actually do everything, we just manually deployed a container image to Cloud Run. You are right. We tell Cloud Build to do everything in the section below.&lt;/p&gt;
&lt;h4 id=&#34;define-the-build-steps-in-a-config-file&#34;&gt;Define the build steps in a config file&lt;/h4&gt;
&lt;p&gt;Instead of typing the build and running commands one after the other, we can use Cloud Build configuration file to do it at once.
In the same directory that contains our app code and the Dockerfile, let&#39;s create a file named &lt;code&gt;cloudbuild.yaml&lt;/code&gt;. This file will contain instructions that tell Cloud Build to build, push and run our container image. The contents of the build config file is as follow:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Build the container image&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/docker&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;build&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;-t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/$PROJECT_ID/bdays-reminder:0.2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Push the container image to Container Registry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/docker&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;push&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/$PROJECT_ID/bdays-reminder:0.2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Deploy container image to Cloud Run&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/gcloud&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;beta&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;run&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;deploy&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;bdays-reminder-service-a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--image&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/$PROJECT_ID/bdays-reminder:0.2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--region&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;us-central1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--memory&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;128Mi&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--timeout&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;60&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--platform&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;managed&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--allow-unauthenticated&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;images&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/$PROJECT_ID/bdays-reminder:0.2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Cloud Build will substitute &lt;code&gt;$PROJECT_ID&lt;/code&gt; with the actual project ID set in the active Cloud SDK configuration (&lt;code&gt;gcloud config set project PROJECT_ID&lt;/code&gt;). In lines 3-4, Cloud build builds a docker image named and tagged &lt;code&gt;gcr.io/$PROJECT_ID/bdays-reminder:0.2&lt;/code&gt;. In lines 6-7, the image is pushed to Container Registry. In lines 9-10, the image built in previous steps is deployed to Cloud Run.&lt;/p&gt;
&lt;h4 id=&#34;iam-permissions&#34;&gt;IAM permissions&lt;/h4&gt;
&lt;p&gt;Before we start the build, let&#39;s talk (think) about IAM permissions.&lt;/p&gt;
&lt;p&gt;If we were using Cloud Console, we wouldn&#39;t have any problem with the build and deployment. In fact when we previously ran &lt;code&gt;gcloud builds&lt;/code&gt; and &lt;code&gt;gcloud beta run deploy&lt;/code&gt; commands we didn&#39;t worry about permissions. Why? Because as project owner, you have all the permissions to do everything to your project including screwing everything up. But since we are going to use Cloud Build to deploy our container image to Cloud Run, Cloud Build service account has to be granted Cloud Run Admin role, else it can&#39;t deploy to Cloud Run. The same thing apply to other GCP services. For Cloud Build to interact with other GCP services, we have to grant Cloud Build service account the necessary roles so it has the permission to perform the tasks.&lt;/p&gt;
&lt;p&gt;With the command below, we are adding an IAM policy binding for the role of &lt;code&gt;roles/run.admin&lt;/code&gt; to the Cloud Build service account which is &lt;code&gt;$PROJECT_NUMBER@cloudbuild.gserviceaccount.com&lt;/code&gt;. Remember that we exported the actual project number as the env var &lt;code&gt;$PROJECT_NUMBER&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud projects add-iam-policy-binding &lt;span class=&#34;nv&#34;&gt;$GCLOUD_PROJECT&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;      --member&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;serviceAccount:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PROJECT_NUMBER&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;@cloudbuild.gserviceaccount.com&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;      --role&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;roles/run.admin&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If it worked, the output would look like this. Our command added lines 24-26.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;Updated IAM policy &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; project &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;PROJECT_ID&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;.
bindings:
- members:
  - serviceAccount:PROJECT_NUMBER@cloudbuild.gserviceaccount.com
  role: roles/cloudbuild.builds.builder
- members:
  - serviceAccount:service-PROJECT_NUMBER@gcp-sa-cloudbuild.iam.gserviceaccount.com
  role: roles/cloudbuild.serviceAgent
- members:
  - serviceAccount:service-PROJECT_NUMBER@gcf-admin-robot.iam.gserviceaccount.com
  role: roles/cloudfunctions.serviceAgent
- members:
  - serviceAccount:service-PROJECT_NUMBER@gcp-sa-cloudscheduler.iam.gserviceaccount.com
  role: roles/cloudscheduler.serviceAgent
- members:
  - serviceAccount:service-PROJECT_NUMBER@compute-system.iam.gserviceaccount.com
  role: roles/compute.serviceAgent
- members:
  - serviceAccount:PROJECT_NUMBER-compute@developer.gserviceaccount.com
  - serviceAccount:PROJECT_NUMBER@cloudservices.gserviceaccount.com
  - serviceAccount:PROJECT_ID@appspot.gserviceaccount.com
  - serviceAccount:service-PROJECT_NUMBER@containerregistry.iam.gserviceaccount.com
  role: roles/editor
&lt;span class=&#34;hl&#34;&gt;- members:
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  - serviceAccount:PROJECT_NUMBER@cloudbuild.gserviceaccount.com
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  role: roles/run.admin
&lt;/span&gt;- members:
  - serviceAccount:service-PROJECT_NUMBER@serverless-robot-prod.iam.gserviceaccount.com
  role: roles/run.serviceAgent
etag: &lt;span class=&#34;nv&#34;&gt;CxXYOgYhaTPF&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;
version: &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We have to pay attention to another thing which is that a &lt;a href=&#34;https://cloud.google.com/iam/docs/service-accounts#service_account_permissions&#34;&gt;service account is also a resource&lt;/a&gt; besides being an identity. So as a GCP resource, they have IAM policies. A service account has to have the Service Account user role to be able to run operations as a service account 🤯. In our case, we have to grant the Service Account User role (&lt;code&gt;roles/iam.serviceAccountUser&lt;/code&gt;) for Cloud Run service account to the Cloud Build service account. We will grant it at the service account level, not at the project level. Wait whaaa? :confused:.&lt;/p&gt;
&lt;p&gt;Now let&#39;s run the command that will grant the service account user role to the service account. We know the Cloud Build service account identifier. But what about Cloud Run&#39;s? &lt;a href=&#34;https://cloud.google.com/run/docs/securing/service-identity#runtime_service_account&#34;&gt;Cloud Run uses the Compute Engine default service account by default&lt;/a&gt; (&lt;code&gt;$PROJECT_NUMBER-compute@developer.gserviceaccount.com&lt;/code&gt;). However it&#39;s not recommended to work with this default setup, because the Compute Engine default service account have read and write access to all resources in your GCP project. That&#39;s too much power. Good IAM policies should always follow the principle of least privilege. But let&#39;s go with the default for now.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud iam service-accounts add-iam-policy-binding &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nv&#34;&gt;$PROJECT_NUMBER&lt;/span&gt;-compute@developer.gserviceaccount.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;	--member&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;serviceAccount:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PROJECT_NUMBER&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;@cloudbuild.gserviceaccount.com&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;	--role&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;roles/iam.serviceAccountUser&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If it worked, the output would look like this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;Updated IAM policy &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; serviceAccount &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;PROJECT_NUMBER-compute@developer.gserviceaccount.com&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;.
bindings:
- members:
  - serviceAccount:PROJECT_NUMBER@cloudbuild.gserviceaccount.com
  role: roles/iam.serviceAccountUser
etag: &lt;span class=&#34;nv&#34;&gt;AmPYO1jtPiLH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;
version: &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h4 id=&#34;lets-build-it&#34;&gt;Let&#39;s build it&lt;/h4&gt;
&lt;p&gt;Now we are all set to start the build by running the command below from the directory containing the &lt;code&gt;Dockerfile&lt;/code&gt; and the &lt;code&gt;cloudbuild.yaml&lt;/code&gt; file. Run the magic command below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud builds submit&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;After successful completion, you will see &lt;strong&gt;SUCCESS&lt;/strong&gt; at the end of the output
and a message like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Service &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;bdays-reminder-service&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; revision &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;bdays-reminder-service-0001&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
has been deployed and is serving &lt;span class=&#34;m&#34;&gt;100&lt;/span&gt; percent of traffic at
https://bdays-reminder-service-&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;hash&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;.a.run.app&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;To obtain the service URL, run the following command:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nv&#34;&gt;SERVICE_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;gcloud beta run services describe pdf-converter --platform managed --region us-central1 --format&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;value(status.url)&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Make a GET request to your new service:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl &lt;span class=&#34;nv&#34;&gt;$SERVICE_URL&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Run this command to list your Cloud Run services.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud beta run services list --platform&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;managed&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;8-create-a-con-job-to-invoke-the-cloud-run-service&#34;&gt;8. Create a con job to invoke the Cloud Run service&lt;/h2&gt;
&lt;p&gt;We just need to to create a job to periodically call the HTTP endpoint of the service we just deployed. Get the URL and replace it in the commands below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud scheduler &lt;span class=&#34;nb&#34;&gt;jobs&lt;/span&gt; create http bday-reminder-job &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --schedule&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;0 17 * * *&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --uri&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;YOUR_URL/birthday_friends&amp;amp;notify=true&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --http-method&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;GET&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;When we were deploying the image to Cloud Run, we used the &lt;code&gt;--allow-unauthenticated&lt;/code&gt; flag, which makes Cloud Run services plublic, accessible to anybody who knows the HTTP endpoints. If we wanted to protect it we&#39;d have used the &lt;code&gt;--no-allow-unauthenticated&lt;/code&gt; flag instead. And in that case, to invoke the secured endpoint using Cloud Scheduler, we&#39;d have to pass the authentication token to the header of the request like in the command below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud scheduler &lt;span class=&#34;nb&#34;&gt;jobs&lt;/span&gt; create http bday-reminder-job  &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --schedule&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;0 17 * * *&amp;#34;&lt;/span&gt;  &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --uri&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$SERVICE_URL&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/birthday_friends&amp;amp;notify=true&amp;#34;&lt;/span&gt;  &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --http-method&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;GET &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --time-zone&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Africa/Accra&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --headers&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;{&amp;#39;Authorization&amp;#39;=&amp;#39;Bearer `(gcloud auth print-identity-token)`&amp;#39;}&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And that&#39;s it. Thanks for reading :raised_hands:. À la prochaine&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Deploy to Cloud Functions, Schedule invocations Using Cloud Scheduler</title>
      <link>https://hrv2k.github.io/post/deploy-to-cloud-functions-schedule-invocations-using-cloud-scheduler/</link>
      <pubDate>Fri, 15 Nov 2019 23:17:16 +0000</pubDate>
      
      <guid>https://hrv2k.github.io/post/deploy-to-cloud-functions-schedule-invocations-using-cloud-scheduler/</guid>
      <description>
        
          &lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: This post is about Scheduling Firebase Cloud Functions with
Cloud Scheduler. Precisely we use Cloud Functions to deploy a birthday
reminder app and use Cloud Scheduler to invoke the app.&lt;/p&gt;
&lt;p&gt;A couple of weeks ago, I stumbled upon &lt;a href=&#34;https://github.com/pybites/bday-app&#34;&gt;a repo on GitHub&lt;/a&gt;, it&#39;s a Flask app that uses &lt;a href=&#34;https://www.twilio.com/&#34;&gt;Twilio&lt;/a&gt; to send SMS notifications about your &lt;em&gt;friends&lt;/em&gt;&#39; upcoming birthdays. It has a script that can be run as a background job using &lt;a href=&#34;https://pypi.org/project/schedule/&#34;&gt;schedule&lt;/a&gt;, a lighweight python job scheduing library, to check once a day for birthdays and it sends out an SMS to your configured phone number if there is a birthday that day.&lt;/p&gt;
&lt;p&gt;It&#39;s an interesting idea especially if you want to keep up with your friends&#39; birthdays and don&#39;t want to use Facebook for it. Unless you can (or want to?) memorize all of them or laboriously save them in your contacts, you probably need to have a mechanism to help you remember them. Know that you may memorize them and still forget to remember them when the actual days come.&lt;/p&gt;
&lt;p&gt;Facebook already has all of your &lt;em&gt;friends&lt;/em&gt;&#39; birthdays data, at least of those who decided to share them. How to export them is covered &lt;a href=&#34;https://github.com/pybites/bday-app/blob/master/README.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This birthday app has a front-end with a page that displays birthdays by month, and other pages. But let&#39;s assumed we just have a backend that checks for birthdays and sends out SMS notifications, there is no front-end, at least not a &#39;meaningful&#39; one.&lt;/p&gt;
&lt;p&gt;The question we then have to ask ourselves is where should we deploy and run our minimal birthday reminder app? We can run it on our laptop; but what if you don&#39;t have internet connection to call the Twilio&#39;s API? What if you don&#39;t turn on your laptop?
Ok, so we should deploy it on a remote server. It should be low-cost, preferably free. And we don&#39;t want to have to manage it (restarting the job for example).
To recap, we want a service that is&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fully-managed&lt;/li&gt;
&lt;li&gt;low-cost/cost-effective (I really mean &lt;em&gt;free&lt;/em&gt;, to be honest)&lt;/li&gt;
&lt;li&gt;reliable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Google Cloud Functions looks perfect for this.&lt;/p&gt;
&lt;h1 id=&#34;1-what-is-google-cloud-functions&#34;&gt;1. What is Google Cloud Functions?&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/functions/docs&#34;&gt;Google Cloud Functions&lt;/a&gt; is a lightweight, event-based, asynchronous compute solution that allows you to create small, single-purpose functions that respond to cloud events without the need to manage a server or a runtime environment.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Essentially what this means is that you write a function that will be called upon an HTTP request or other events happening in Google Cloud (a message being published, a file being uploaded to or deleted from cloud storage, etc.), deploy it to Google Cloud and you relax.&lt;/p&gt;
&lt;p&gt;Google Cloud Functions is fully-managed, you don&#39;t have to grapple with any management overhead. It&#39;s free for the first 2 million invocations per month. Only when you used up the &lt;a href=&#34;https://cloud.google.com/free/docs/gcp-free-tier&#34;&gt;free tier&lt;/a&gt; that you are billed for subsequent invocations. In our case, it&#39;s clear that we won&#39;t be paying anything; unless we screw up the job scheduler. Google Cloud Functions is highly available. If the service stops working because of whatever reason, the problem will be handled without your intervention and the service will come back up.&lt;/p&gt;
&lt;h1 id=&#34;2-the-code&#34;&gt;2. The code&lt;/h1&gt;
&lt;p&gt;I repurposed the initial &lt;a href=&#34;https://github.com/pybites/bday-app&#34;&gt;birthday app&lt;/a&gt; for Cloud Functions:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;icalendar&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Calendar&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;collections&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;namedtuple&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;twilio.rest&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Client&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;google.cloud&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;storage&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Access cloud storage bucket and download the Calendar&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;BUCKET_NAME&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;CLOUD_STORAGE_BUCKET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;storage_client&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;storage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;bucket&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;storage_client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_bucket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BUCKET_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;blob&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bucket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_blob&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;bday-reminder/cal.ics&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;blob&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;download_to_filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/tmp/cal.ics&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;birth_day&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;namedtuple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;BD&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;month&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;day&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;read_calendar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39; Reads the calendar file and generates
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    a tuple with name and birthday&amp;#39;s month and
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    date for each entry in the calendar file &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/tmp/cal.ics&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;calics&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Calendar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;from_ical&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;component&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;walk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;VEVENT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SUMMARY&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#39;s birthday&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;birth_date&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DTSTART&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;birth_day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                            &lt;span class=&#34;n&#34;&gt;month&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;birth_date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;month&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                            &lt;span class=&#34;n&#34;&gt;day&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;birth_date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# Your Account Sid and Auth Token from twilio.com/console&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;account_sid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;auth_token&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;client&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;account_sid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;auth_token&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;send_sms&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;from_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;+166...&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;+233...&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;messages&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;from_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;from_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;notify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39; HTTP Cloud Function
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    Checks if today is the birthday of a friend.
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    If yes, send out a message &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;today&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;today&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;bday_names&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bday&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;read_calendar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bday&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;month&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;today&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;month&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bday&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;day&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;today&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;bday_names&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;{}&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bday&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;{}{}&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;today&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bday_names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bday_names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;send_sms&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;splitlines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The content of the &lt;code&gt;requirements.txt&lt;/code&gt; file is below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;icalendar==4.0.3
twilio==6.26.2
google-cloud-storage==1.22.0&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;3-birthday-data&#34;&gt;3. Birthday data&lt;/h1&gt;
&lt;p&gt;As I mentioned it earlier, how to export your friends&#39; birthdays data from Facebook and export them as a calendar file (&lt;code&gt;cal.ics&lt;/code&gt;) is covered &lt;a href=&#34;https://github.com/pybites/bday-app/blob/master/README.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I created a Cloud Storage bucket where I uploaded the calendar file. To work with that calendar file I have to download it first. That&#39;s what happening at line 13. The file is downloaded inside &lt;code&gt;/tmp&lt;/code&gt; because during execution, a function can only write that location of the filesystem. You may have noticed that I am getting the bucket name from an environment variable. When deploying a cloud function, you can specify environment variables and use them in your code.&lt;/p&gt;
&lt;h1 id=&#34;4-lets-deploy-the-app-to-google-cloud-functions&#34;&gt;4. Let&#39;s deploy the app to Google Cloud Functions&lt;/h1&gt;
&lt;p&gt;Let&#39;s deploy our birthday app to Google Cloud Functions using Cloud Console. We will first create a new project. Then we create a cloud storage bucket and upload the calendar file to that bucket. Next, we create a cloud function and subsequently create a job that will call the function on a recurring schedule. I assume that you have a Google Cloud account&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;a. Navigate to &lt;a href=&#34;https://console.cloud.google.com&#34;&gt;Google Cloud Console&lt;/a&gt; and click &lt;code&gt;CREATE&lt;/code&gt; to create a new project&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/cloud-console.png&#34; alt=&#34;Navigate to console.cloud.google.com&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;b. Enter the project&#39;s name and click &lt;code&gt;CREATE&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/create_project.png&#34; alt=&#34;Create a project&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;c. Click on &lt;code&gt;Select a project&lt;/code&gt; on the app bar and select the project you just created&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/select_project.jpeg&#34; alt=&#34;Select the project&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;d. Click on the menu button (amburger icon) and click on &lt;code&gt;Storage&lt;/code&gt; to Create a bucket. Then click &lt;code&gt;Create bucket&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/create_bucket.png&#34; alt=&#34;Create a bucket&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;e. Enter a name for the bucket and click &lt;code&gt;CREATE&lt;/code&gt;. Bucket names have to be globally unique&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Take note of the bucket name, you will need it in the next steps.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/bucket_name.png&#34; alt=&#34;Name your bucket and click Create&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;f. Upload the calendar file to the bucket&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/upload_cal.png&#34; alt=&#34;Upload the calendar file&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;g. Move the calendar file inside of a folder that can be created by clicking on &lt;code&gt;Create folder&lt;/code&gt;&lt;/strong&gt;. Name the folder &lt;code&gt;bday-reminder&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/move_file_tofolder.png&#34; alt=&#34;Move the calendar file inside of a folder&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;h. Click on the menu button and click on &lt;code&gt;Cloud Functions&lt;/code&gt;. Then click &lt;code&gt;Create function&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If the Cloud Functions API is not enabled, instead of a button &lt;code&gt;Create function&lt;/code&gt;, you would see &lt;code&gt;Enable API&lt;/code&gt;. Click on it to enable Cloud Functions and navigate back to the Cloud Functions console to finally create a function.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/click_create_cf.png&#34; alt=&#34;Cloud Functions console&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;i. Fill out the form with the relevant information and click &lt;code&gt;Create&lt;/code&gt; to deploy your function&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Function name: &lt;strong&gt;bday-reminder&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Memory allocated, the amount of memory to allocate to the function: &lt;strong&gt;128MB&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Trigger: &lt;strong&gt;HTTP&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Source code, where to find the source code: &lt;strong&gt;Inline editor&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Runtime, the runtime to use to execute the code: &lt;strong&gt;Python 3.7&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/create_function.png&#34; alt=&#34;Create function&#34;&gt;&lt;/p&gt;
&lt;p&gt;Copy your code and paste it in the editor as shown below. We could use a different source, we could upload the code to cloud storage and specify the storage bucket, we could zip the code files and just upload it or specify a source repository.&lt;/p&gt;
&lt;p&gt;Specify the function to execute. It&#39;s the name of the function in the code that will be executed when the Google Cloud Function is triggered: &lt;strong&gt;&lt;code&gt;notify&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/cf_code.png&#34; alt=&#34;code and function to execute&#34;&gt;&lt;/p&gt;
&lt;p&gt;Then click on the link &lt;code&gt;Environment variables, networking, timeouts and more&lt;/code&gt; to configure other Cloud Function options as shown below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/advanced_options.png&#34; alt=&#34;advanced options&#34;&gt;&lt;/p&gt;
&lt;p&gt;The option we are most interested in is &lt;strong&gt;Environment variables&lt;/strong&gt;. Click &lt;code&gt;Add variable&lt;/code&gt; to create an environment variable that will store the name of the storage bucket we created earlier as shown below. Finally click &lt;code&gt;Create&lt;/code&gt; to deploy your cloud function.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/env_var.png&#34; alt=&#34;Environment variable&#34;&gt;&lt;/p&gt;
&lt;p&gt;After your function is created, you will see a list of functions in the Cloud Functions console including the one you just created. Click on your newly deployed function to see the dashboard.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/cf_deployed.png&#34; alt=&#34;function created&#34;&gt;&lt;/p&gt;
&lt;p&gt;When your function was created, a new URL was also created. You can use that URL to trigger your function. Take note of the URL, you will need it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/cf_trigger.png&#34; alt=&#34;function trigger&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;5-lets-create-a-job-using-google-cloud-scheduler&#34;&gt;5. Let&#39;s create a job using Google Cloud Scheduler&lt;/h1&gt;
&lt;p&gt;Now that your code is deployed to Cloud Functions is deployed and ready to be invoked, you are going to create a job to hit the function&#39;s URL every day at a specific time to receive the birthday notifation SMS. Click on the menu,  then on Cloud Scheduler. You will see the page below, click on &lt;code&gt;CREATE JOB&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/create_job.png&#34; alt=&#34;create job&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;51-specify-a-region-for-your-job-you-can-go-with-the-default&#34;&gt;5.1. Specify a region for your job. You can go with the default&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/job_location.png&#34; alt=&#34;job location&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;52-fill-out-the-form-with-the-relevant-information&#34;&gt;5.2. Fill out the form with the relevant information&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Name: &lt;strong&gt;bday-reminder-job&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Frequency, the schedule for running the job: &lt;code&gt;0 17 * * *&lt;/code&gt; (Every day at 17:00). Cron expressions can get confusing sometimes, during those times, &lt;a href=&#34;https://crontab.guru&#34;&gt;crontab.guru&lt;/a&gt; can help you.&lt;/li&gt;
&lt;li&gt;Target: &lt;strong&gt;HTTP&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;URL: paste your function&#39;s URL here.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally click &lt;code&gt;Create&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/job.png&#34; alt=&#34;create job&#34;&gt;&lt;/p&gt;
&lt;p&gt;You can set a schedule for your job to be run right away to make sure everything is set up correctly. Click on &lt;code&gt;RUN NOW&lt;/code&gt; to test whether your job will run succesfully when its scheduled time time comes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/bday-reminder/job-1.png&#34; alt=&#34;job&#34;&gt;&lt;/p&gt;
&lt;p&gt;Check the Result column to see if the job succeeded. If it failed click
on &lt;code&gt;View&lt;/code&gt; in the Logs column to diagnose the error.&lt;/p&gt;
&lt;p&gt;That&#39;s all cloud people! Thanks for reading :raised_hands:!&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Let&#39;s Talk Cloud</title>
      <link>https://hrv2k.github.io/post/let-s-talk-cloud/</link>
      <pubDate>Wed, 23 Oct 2019 09:30:37 +0000</pubDate>
      
      <guid>https://hrv2k.github.io/post/let-s-talk-cloud/</guid>
      <description>
        
          &lt;h1 id=&#34;1-what-is-cloud-technology&#34;&gt;1. What is Cloud technology?&lt;/h1&gt;
&lt;p&gt;Cloud technology abstracts away all infrastructure management. What does that mean? It means as a business, you don&#39;t have to deal with bare metal (think computer hardware) and anything related to it anymore.&lt;/p&gt;
&lt;p&gt;Before the advent of the cloud, you had to go to or call a hardware vendor to figure out what hardware brand to adopt, what model of hardware to buy, what is the best deal for you in terms of price, memory, cpu etc., lower-level stuff in a nutshell. You also had to think about your maximum expected load and plan for it before making any purchase. That meant buying beefy machine and not using all of its resources for most of the time. And also if your machines ran substantial workload, you had to think about cooling or your processors wouldn&#39;t work properly. Furthermore, you had to think about hardware maintenance and facility security. You may have the best software security and all of that, but if your machines are not physically well secured, you are still at risk. How much time, money, and effort do you put into making sure your infrastucture meets the demand? What is the state of your network? Does it work as expected? How do you manage your data, backups, etc. Probably you are doing all these things but they have nothing to do with your core business and to some degree it&#39;s a pain in the neck. With the advent of the cloud, you have many more optimized options and solutions.&lt;/p&gt;
&lt;p&gt;So, what cloud technology does is it takes care of all the compute, network and storage management and offers them as services. Computing has become a public utility where it&#39;s easy to get the type of service you want on demand. And you only pay for what you use. This idea of &amp;quot;&lt;a href=&#34;https://en.wikipedia.org/wiki/Utility_computing&#34;&gt;computing utility&lt;/a&gt;&amp;quot;, or what we know as &lt;a href=&#34;https://en.wikipedia.org/wiki/Cloud_computing&#34;&gt;cloud computing&lt;/a&gt;, was suggested by &lt;a href=&#34;https://en.wikipedia.org/wiki/John_McCarthy_(computer_scientist)&#34;&gt;John McCarthy&lt;/a&gt; when he was speaking at the MIT Centennial in 1961,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;If computers of the kind I have advocated become the computers of the future, then computing may someday be organized as a public utility just as the telephone system is a public utility. Each subscriber needs to pay only for the capacity he actually uses. The computer utility could become the basis of a new and important industry&amp;quot;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By providing computing as a service, cloud technology enables businesses to focus on their core business and use their resources to optimize for what&#39;s trully important to them. It could be customer satisfaction, employee productivity, growth, profit, etc. It&#39;s clear that cloud technology has the potential to greatly impact business operations, at least IT operations of a business. To take advantage of the features that the modern cloud technology has to offer, IT organizations or IT departments will have to think differently about how to build applications if they are to embrace the new way of doing computing. For example, cloud providers have made it possible and very simple to scale applications to handle heavy workloads. But not all applications are scalable, and not all parts of an application need scale at the same time and to the same level. That means to take advantage of the cloud technology, software developers have to consider some architectural changes. In this specific case, they have to build applications in a way that takes not only scalability into account, but also independent scalability of different services of the application.&lt;/p&gt;
&lt;p&gt;With the increasing adoption of cloud services, businesses are outsourcing the jobs of sys admin and/or DevOps engineer to cloud providers. One may think that systems administration and operation related jobs will be found solely in datacenters, because businesses will be using cloud services and won&#39;t have to deal with infrastructure management. All they will need is software engineers to build software and write deployment codes. So essentially DevOps engineers are working tirelessly to build cloud infrastructures so that there won&#39;t be DevOps jobs in entreprises in the future. That means DevOps jobs won&#39;t go away, they will just be shipped maybe entirely to data centers. According to the &lt;a href=&#34;https://insights.stackoverflow.com/survey/2019#key-results&#34;&gt;Stackoverflow Developer Survey 2019&lt;/a&gt;, DevOps specialists are among the highest paid, most satisfied with their jobs. So, draw your own conclusions.&lt;/p&gt;
&lt;p&gt;It is undeniable that cloud providers have made provisioning and managing compute resources very simple, as well as deploying apps. In the next sections, I focus on the GCP.&lt;/p&gt;
&lt;h1 id=&#34;2-gcp-in-a-nutshell&#34;&gt;2. GCP in a nutshell&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud Platform (GCP)&lt;/a&gt; is Google&#39;s Cloud offerings. It&#39;s a suite of products and services ranging from basic compute, storage and networking to specialized specialized services such as IoT, analytics, AI, etc. Depending on your needs, you may choose to manage the resources you provision yourself or choose to use fully managed services. Managed services are taken care of by the platform on your behalf and they are redundant, thus highly available. That means management overhead, scalability and availability issues are all managed by the GCP.
&lt;a href=&#34;https://cloud.google.com/security/infrastructure/design/&#34;&gt;The whole of GCP is built on top of Google&#39;s global infrastructure&lt;/a&gt;. It takes advantage of years of research, engineering and testing that have gone into building that infrastructure.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/gregsramblings/google-cloud-4-words/blob/master/Poster-medres.png?raw=true&#34; alt=&#34;GCP_producs&#34;&gt;&lt;/p&gt;
&lt;p&gt;Let&#39;s geek out a bit over some GCP services.&lt;/p&gt;
&lt;h1 id=&#34;3-some-gcp-products-and-services&#34;&gt;3. Some GCP products and services&lt;/h1&gt;
&lt;h2 id=&#34;deployment-manager&#34;&gt;Deployment Manager&lt;/h2&gt;
&lt;p&gt;I find the concept of deployment manager very interesting. You declare in a config file the resources you want to create and you submit the file to &lt;a href=&#34;https://cloud.google.com/deployment-manager/&#34;&gt;Google Cloud deployment manager&lt;/a&gt; and that&#39;s it; your resources or services are created and deployed. You can bring your entire infrastructure to life using a couple lines of declarative code. Hence the concept of &lt;a href=&#34;https://en.wikipedia.org/wiki/Infrastructure_as_code&#34;&gt;Infrastructure as Code&lt;/a&gt;, which is a way to define in code the resources you need for your infrastructure and to use an infrastructure provisioning engine to create and configure those resources.&lt;/p&gt;
&lt;p&gt;Using deployment manager, when your deployment infrastructure gets more complex, you can create a template for each resource. For example, you can create a template for a network, a template for the firewall rules, a template for a virtual machine (VM), etc. A template can import other templates. Then all the templates are imported in a single configuration file that the deployment manager will use to create the resources specified in various templates.&lt;/p&gt;
&lt;p&gt;One of the important concepts of deployment manager, and that&#39;s true for all the Infrastructure as Code services out there, is that you don&#39;t give instructions about how your infrastructure should be built; the deployment manager figures that out by itself. You just tell it how you want your infrastructure to look like, and it makes sure the state of your infrastructure matches your intent.&lt;/p&gt;
&lt;p&gt;With the Infrastructure as Code approach, you can afford to experiment with different solutions and collect usage information to make better decisions. You can easily tweak your deployment infrastructure to best suit your requirements. As a consequence, when your infrastructure evolves, you just need to update your deployment codes to meet the demand and tell the deployment manager to make your infrastructure looks like what you have described in the code.&lt;/p&gt;
&lt;h2 id=&#34;networking&#34;&gt;Networking&lt;/h2&gt;
&lt;p&gt;Deploying a network on the GCP is actually simpler than you may think. The GCP has greatly simplified the creation of a &lt;a href=&#34;https://cloud.google.com/vpc/docs/vpc&#34;&gt;Virtual Private Cloud (VPC) network&lt;/a&gt;, which is a global private network that operates on top of Google&#39;s global network infrastructure. It&#39;s the same network that Google uses to deliver its services (think Google Search, Gmail, Google Drive, etc...) to billions of users worldwide. VPC networks on the GCP are global resources. That means, you can have your virtual machines provision in Europe and Asia and all being in the same private network.&lt;/p&gt;
&lt;p&gt;When you create a project on the GCP, a default VPC network is automatically created. The default VPC contains subnets in each region. If the topology of the default VPC network doesn&#39;t meet your requirements, you can modify or delete it completely and recreate a custom network where you manually create the subnets in the regions you want your infrastructure to be deployed in. With just a couple of clicks, or a single command you have a globally operational VPC network.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud compute networks create my-network --subnet-mode&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;custom&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using the &lt;a href=&#34;https://console.cloud.google.com/&#34;&gt;GCP console&lt;/a&gt;, you can create the VPC network and its subnets at the same time. However using the command-line, it&#39;s done separately. For that, you specify in what geographic region (American regions, European regions, Asian regions) you want the subnet to be created and you specify the IP address range of the subnet as shown below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud compute networks subnets create my-network-subnet-eu &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; --network&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;my-network --region&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;europe-west1 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; --range&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;10.128.0.0/20&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can create firewall rules to allow or block network traffic based on various protocols and ports to or from certain IP address ranges. It is possible to also create firewall rules that apply to a specific machine instance by using network tags. You can enable the logging of network traffic by just toggling a button.&lt;/p&gt;
&lt;h2 id=&#34;custom-machine-type&#34;&gt;Custom machine type&lt;/h2&gt;
&lt;p&gt;The same simplicity is present when you are creating virtual machine (VM) instances. You choose the machine type that best suits your workload, which is either memory intensive or CPU intensive or standard. The thing with machine type is that they are predefined. That is, the number of vCPUs and amount of memory of a given machine type are fixed. For example let&#39;s say your workload is CPU intensive and you need 20 vCPUs to accommodate it. Now guess what? There is no predefined machine type with 20 vCPUs, you&#39;ll have to go with a predefined machine type that has 32 vCPUs. So you&#39;ll be wasting money paying for 12 additional vCPUs that are not going to be used. That looks bad. Well, I should say it looked bad; because on GCP the problem is solved with &lt;a href=&#34;https://cloud.google.com/custom-machine-types/&#34;&gt;custom machine types&lt;/a&gt;. Now if none of the predefined machine types properly suits your workload, you can configure your own machine type. While creating the VM you just specify the number of vCPUs and the memory size that you want your VM to have. In the GCP console, you just input these numbers. The command to create a VM that has 10 vCPUs and 30 GB of memory is the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud compute instances create my-custom-vm --custom-cpu &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; --custom-memory &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; --zone europe-west1-b&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Other major cloud providers have tried to solve this problem by providing hundreds of machine types.&lt;/p&gt;
&lt;p&gt;You can resize your VM whenever you want. You just need to stop the instance, specify the new memory size and number of vCPUs, then you restart the instance.
There are many other properties that you can specify when creating a VM. Properties such as, boot disk type, boot disk size, boot disk image, startup script, tags that can be used for firewall rules, etc. They define the VM configuration.&lt;/p&gt;
&lt;h2 id=&#34;managed-instance-group&#34;&gt;Managed Instance Group&lt;/h2&gt;
&lt;p&gt;Now, let&#39;s say in general your single VM is able to handle all your workloads. But sometimes, traffic spikes and additional VMs are needed to share the workloads. What should you do? Should you create more VMs and wait for the spike, thereby wasting money on idle instances? No. Should you wait until your single running VM reaches its capacity limit and gets knock out by the traffic before spinning up another VM, thereby causing unnecessary disruption to your business? No. You should rather use &lt;a href=&#34;https://cloud.google.com/compute/docs/instance-groups/&#34;&gt;Managed instance groups (MIGs)&lt;/a&gt; and enable autoscaling and load balancing services.&lt;/p&gt;
&lt;p&gt;Essentially, MIGs are groups of identical VM instances created from the same instance template and managed by GCP. MIGs can automatically scale up or down the number of instances in a group depending on the workload size and distribute incoming network traffic across the instances. Managed instance groups also offer autohealing. Based on health checks, new instances can be provisioned to replace unresponsive instances. If an instance goes down for some reason, another one is automatically created to replace it.&lt;/p&gt;
&lt;p&gt;To create a managed instance group, you need an instance template. An instance template is a specification of a VM configuration. Since the VMs of an instance group have to be identifical, they are created with the same properties that are specified in the instance template. Here comes the best part. When you create a managed instance group, GCP manages everything for you once you&#39;ve specified how you want the instance group to behave. You do that by configuring an autoscaling policy and a target utilization level.
An autoscaling policy is basically a load metric. it can be the average or maximum CPU utilization, some monitoring metrics that you define or the maximum requests per second per instance. The target utilization level is the target load at which you want to maintain the VM instances of your managed instance group. For example, let&#39;s say your autoscaling policy is based on the average CPU utilization and you set the target utilization level at 80%. That means instances will be added to or deleted from the managed instance group to maintain the average CPU utilization around 80%. The maximum and minimum number of instances in a MIG has to be specified at its creation.&lt;/p&gt;
&lt;h2 id=&#34;load-balancers&#34;&gt;Load balancers&lt;/h2&gt;
&lt;p&gt;Since managed instance groups consist of many VM instances with different IP addresses which are generally ephemeral, there is therefore a need for a unique and stable IP address that user requests can reach. We also need to distribute traffic to the instances of the MIG. That&#39;s where load balancers come in. They provide not only a stable access point via a static public IP address that serves as a frontend for all VM instances in the instance group, but also a system to distribute network traffic among the instances.&lt;/p&gt;
&lt;p&gt;GCP has many &lt;a href=&#34;https://cloud.google.com/load-balancing/docs/load-balancing-overview#types_of_cloud_load_balancing&#34;&gt;types of load balancing&lt;/a&gt;. &lt;a href=&#34;https://cloud.google.com/load-balancing/docs/choosing-load-balancer&#34;&gt;Choosing the right load balancer&lt;/a&gt; is not as straightforward as creating a VM. You need to understand how they work and given your desired deployment architecture, which one will best meet your requirements. &lt;a href=&#34;https://cloud.google.com/load-balancing/docs/&#34;&gt;The Google Cloud documentation&lt;/a&gt; is very extensive and goes into details about every load balancer, the different components of a load balancer and what you need to know to be able to make the make the right choice.&lt;/p&gt;
&lt;p&gt;There are 3 main axes along which GCP&#39;s load balancers can be divided. These are, source of the traffic (internal or external), destination of traffic (regional or global) and traffic type (TCP, UDP, HTTP/HTTPS, SSL).&lt;/p&gt;
&lt;p&gt;Based on the source of traffic that is forwarded, GCP&#39;s load balancers can be divided into internal and external load balancers.
Internal load balancers distribute traffic originating from within a VPC network. Whereas external load balancers distribute traffic coming from the public internet to a VPC network.&lt;/p&gt;
&lt;p&gt;Internal load balancers are regional. That is to say they distribute traffic to backends located in one region (can be spread across multiple zones). External load balancers, on the other hand, are regional or global. Global load balancers distribute traffic among backends spread across multiple regions.&lt;/p&gt;
&lt;p&gt;GCP&#39;s load balancers can further be divided based on the supported traffic types. In other words, they operate at different layers of the OSI model.&lt;/p&gt;
&lt;p&gt;Coming back to choosing the right load balancer, there is a &lt;a href=&#34;https://cloud.google.com/load-balancing/docs/choosing-load-balancer#flow_chart&#34;&gt;Flow chart&lt;/a&gt; for that.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.google.com/load-balancing/images/choose-lb.svg&#34; alt=&#34;Flowchart_choosing_LB&#34;&gt;&lt;/p&gt;
&lt;p&gt;You need to have 3 pieces of information to effectively use the flowchart:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The source of the traffic that is going to be forwarded to the load balancer: Is it coming from the internet, &lt;strong&gt;external load balancer&lt;/strong&gt;. Or it&#39;s coming from within your VPC network, &lt;strong&gt;internal load balancer&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The location of the backends that are going to receive the traffic distributed by the load balancer: Are they in the same region, &lt;strong&gt;regional load balancer&lt;/strong&gt;. Or they are spread across multiple regions, &lt;strong&gt;global load balancer&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The type of traffic your load balancer must handle. Depending on 1 and 2, you may choose a &lt;strong&gt;tcp/udp load balancer&lt;/strong&gt;, &lt;strong&gt;ssl or tcp proxy&lt;/strong&gt; or an &lt;strong&gt;http/https load balancer&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you want to distribute traffic coming from within your VPC network, you use internal load balancers. And since internal load balancers are regional, your backends have to be in one region.&lt;/p&gt;
&lt;p&gt;If you have to distribute HTTP(S) traffic coming from the internet, you use global HTTP(S) load balancing.&lt;/p&gt;
&lt;p&gt;If it&#39;s UDP traffic, the only option is to go with Network TCP/UDP load balancing, which is regional.&lt;/p&gt;
&lt;p&gt;But if it&#39;s TCP traffic, that&#39;s where it gets interesting. TCP traffic may be encrypted using SSL/TLS. If it&#39;s the case, you may offload the encryption/decryption work to the platform by using the SSL proxy load balancing. If you don&#39;t want to do that and still forward traffic to backends located in mutiple regions, you may use TCP proxy load balancing. But if you want to preserve client IPs, you should go with Network TCP/UDP load balancing, because all GCP&#39;s load balancers proxy connections from clients except Network TCP/UDP and Internal TCP/UDP load balancing.&lt;/p&gt;
&lt;p&gt;When using cloud products the devil is in the details, however there is nothing devilish here. For example, with respect to networking on the GCP, you have to choose between two &lt;a href=&#34;https://cloud.google.com/network-tiers/docs/overview&#34;&gt;Network Service Tiers&lt;/a&gt;, Standard Tier and Premier Tier. Essentially with Premier Tier, the traffic is routed within Google&#39;s global private network as much as possible; it&#39;s fast, more secured and you pay a little bit more. With Standard Tier, the traffic exits as soon as possible and is routed over the public internet to the client; it&#39;s cheaper and ... you know ... it&#39;s the internet. So what do you need? Global availability, low latency and high-performance, then stay premium. Or you have a tight budget and prefer optimizing for cost, then go standard. You can combine the two if you have workloads with different requirements.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.google.com/network-tiers/images/tiers-use-cases-icons.svg&#34; alt=&#34;NST&#34;&gt;&lt;/p&gt;
&lt;p&gt;The choice of a Network Service Tier affects your GCP resources including load balancers. Internal load balancers support only the Premium Tier of Network Service. But with external load balancers, you have the choice. However if you want to use global load balancing you have to opt for the Premium Tier. In any other cases, opting for Standard Tier restricts your load balancing to be regional. That&#39;s the case of HTTP(S) load balancing and TCP/SSL Proxy. In fact if you think about it, it all makes sense. With internal load balancers, the traffic is already coming from the VPC network. With global load balancers, the backends are spread across multiple regions. A great amount of traffic will be going on within Google&#39;s network, because a global load balancer sends user requests to the closest available backend. If that backend is at capacity, the traffic is sent to the next closest backend (or region). So a global load balancer uses the Premier Tier by design.&lt;/p&gt;
&lt;p&gt;I&#39;ll wrap up with one final remark. Google doesn&#39;t use hardware load balancing but a &lt;a href=&#34;https://research.google.com/pubs/pub44824.html&#34;&gt;software-defined network load balancer called Maglev&lt;/a&gt;. GCP&#39;s load balancers are all software. Next time you configure a load balancer, think about that.&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
